[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Einführung in die Datenwissenschaft mit Excel",
    "section": "",
    "text": "Vorwort\nWork in Progress\n\n\nCopyright\nDieses Werk ist lizenziert unter einer Creative Commons Namensnennung - Nicht-kommerziell - Weitergabe unter gleichen Bedingungen 4.0 International Lizenz (CC-BY-NC-SA). Details zur Nutzungsbedingungen und dem Copyright finden sich unter createivecommons.org.\n2023, Christian Glahn, Zurich, Switzerland"
  },
  {
    "objectID": "kapitel/einleitung/kapitel.html#ziele",
    "href": "kapitel/einleitung/kapitel.html#ziele",
    "title": "1  Einleitung",
    "section": "1.1 Ziele",
    "text": "1.1 Ziele\n\n\n\nAbbildung 1.1: Ziele und Themen"
  },
  {
    "objectID": "kapitel/einleitung/kapitel.html#organisation-dieses-buchs",
    "href": "kapitel/einleitung/kapitel.html#organisation-dieses-buchs",
    "title": "1  Einleitung",
    "section": "1.2 Organisation dieses Buchs",
    "text": "1.2 Organisation dieses Buchs"
  },
  {
    "objectID": "kapitel/einleitung/excel-versionen.html#excel-versionen-und-betriebssysteme",
    "href": "kapitel/einleitung/excel-versionen.html#excel-versionen-und-betriebssysteme",
    "title": "2  Excel Versionen",
    "section": "2.1 Excel-Versionen und Betriebssysteme",
    "text": "2.1 Excel-Versionen und Betriebssysteme\nExcel365 unterscheidet sich leicht für MacOS und Windows. Im Rahmen dieses Buchs stellt das keine Einschränkung dar, denn die Unterschiede sind gering.\nDie auffälligsten Unterschiede betreffen den Importer und die bedingte Formatierung.\n\nDer Importer ist unter Windows etwas flexibeler gestaltet als unter MacOS. Dieser Unterschied betrifft den Inhalt dieses Buchs nicht.\nDie bedingte Formatierung wird unter MacOS traditionell mit einen völlig andereren Dialog konfiguriert wird als unter Windows.\n\n\n\n\n\n\n\nMacOS vs. Windows\n\n\n\nIn den (wenigen) Fällen, in denen sich die Excel-Versionen auf den beiden Betriebssystemen unterscheiden, wird der Unterschied durch eine MacOS vs. Windows-Box - wie diese hier - gesondert hervorgehoben. Das gleiche gilt für die Eigenheiten, die nur auf einem der beiden Betriebssyeme vorkommen.\n\n\n\n\n\n\n\n\nMacOS\n\n\n\nSoll unter MacOS Excel365 eine alte Version ohne Abonement ersetzen, dann muss die alte Version zuerst deinstalliert werden. Sind zusätzlich andere Office-Programme von Microsoft ohne Abonement installiert, dann müssen diese ebenfalls deinstalliert werden. Beim Deinstallieren werden die Konfigurationsdateien nicht gelöscht. Diese müssen manuell gelöscht werden. Erst jetzt kann die neue Version von Microsoft365 installiert werden."
  },
  {
    "objectID": "kapitel/einleitung/excel-versionen.html#excel-und-sprachen",
    "href": "kapitel/einleitung/excel-versionen.html#excel-und-sprachen",
    "title": "2  Excel Versionen",
    "section": "2.2 Excel und Sprachen",
    "text": "2.2 Excel und Sprachen\nExcel365 ist in vielen Sprachen verfügbar. Die Sprache wird von Excel vom Betriebssystem übernommen. Dieses Buch bezieht sich auf die deutschsprachige Excel Version mit Schweizer Regionseinstellungen. Alle Beispiele lassen sich in allen anderen Sprachen nachvollziehen, wenn die Werte und Funktionsnamen entsprechend angepasst werden.\n\n\n\n\n\n\nWarnung\n\n\n\nDie Funktionsnamen unterscheiden sich stark zwischen den einzelnen Sprachen. Oft ist es unmöglich, die Funktionsnamen durch eine Übersetzung des Funktionsnamen aus einer anderen Sprache abzuleiten.\nBeispielsweise heisst der englische Funktionsname OFFSET() (deutsch: Versatz) auf Deutsch BEREICH.VERSCHIEBEN() (engl. move range).\n\n\n\n\n\n\n\n\nMacOS vs. Windows\n\n\n\nUnter MacOS kann die Sprache von Excel365 ausschliesslich über die Systemeinstellungen geändert werden. Die Spracheinstellung wird vom Betriebssystem übernommen. Dadurch verändert sich die Sprache aller Programme, die auf dem Computer installiert sind. Wird die Sprache von MacOS geändert, dann muss der Computer neu gestartet werden, damit die Änderung wirksam wird. Dieser Schritt verändert jedoch nicht nur die Sprache von Menus sondern auch die Namen vieler Verzeichnisse. Deshalb wird dieser Schritt nicht empfohlen.\nUnter Windows kann die Sprache nur für Excel365 geändert werden. Dazu muss in Excel unter Datei &gt; Optionen &gt; Sprache geändert werden. Die gewünschte Sprache muss unter Office-Anwendungssprache als bevorzugt markiert werden. Die Änderung wird erst wirksam, nachdem Excel beendet und neu gestartet wurde.\n\n\nDie Spracheinstellung haben keinen Einfluss auf die Funktion von Excel. Die Spracheinstellung bestimmt nur die Sprache der Benutzeroberfläche. Zur Benutzeroberfläche gehören die Menüs, die Dialoge, die Hilfetexte und die Funktionsnamen. Wird eine Arbeitsmappe in einer Excel mit einer anderen Spracheinstellung geöffnet, dann werden die Funktionsnamen automatisch übersetzt. Es ist jedoch unmöglich die Funktionsnamen in der ursprünglichen Sprache der Arbeitsmappe einzugeben."
  },
  {
    "objectID": "kapitel/einleitung/02_oberflaeche.html#arbeitsblätter",
    "href": "kapitel/einleitung/02_oberflaeche.html#arbeitsblätter",
    "title": "3  Bedienoberfläche",
    "section": "3.1 Arbeitsblätter",
    "text": "3.1 Arbeitsblätter\nDer Tabellenbereich ist das zentrale Element von Excels Arbeitsoberfläche. Dabei handelt es sich um den Datenbereich, der sich deutlich durch das beschriftete Gitterraster im Zentrum des Excel-Fensters abhebt und den Grossteil der Arbeitsoberfläche einnimmt. Über dieses Raster wird primär mit Daten und Funktionen interagiert. Der Tabellenbereich zeigt einen Ausschnitt des aktuellen Arbeitsblatts.\n\n\n\nAbbildung 3.1: Das Excel Arbeitsfenster\n\n\n\nDefinition 3.1 Ein Excel Arbeitsblatt ist ein Gitterraster, das aus Zellen besteht. Jede Zelle kann einen Wert enthalten.\n\n\nDefinition 3.2 Eine Zelle ist ein Feld im Raster eines Arbeitsblatt.\n\nExcel zeigt durch eine Hervorhebung an, welche Zelle aktuell markiert ist. Diese Markierung kann mit der Maus oder mit den Pfeiltasten bewegt werden. Wenn nur eine Zelle markiert ist, dann entspricht die Markierung der aktiven Zelle. Eine Markierung kann auch mehrere Zellen umfassen. In diesem Fall wird die aktive Zelle durch eine helle Hervorhebung gekennzeichnet, während der Rest der Markierung ausgegraut ist. Alle Eingaben mit der Tastatur bezeihen sich immer auf die aktive Zelle.\nOben und Links vom Tabellenbereich findet sich die Beschriftung für die Spalten und Zeilen. Spalten werden mit Buchstaben benannt, Zeilen werden mit Zahlen benannt. Daraus ergibt sich ein Koordinatensystem, mit dem jede Zelle eindeutig adressiert wird.\n\nDefinition 3.3 Die Koordinaten einer Zelle sind die Zellenadresse.\n\nIm Abschnitt 5.4 werden die verschiendenen Arten der Adressierung von Zellen und Zellbereichen detailliert beschrieben."
  },
  {
    "objectID": "kapitel/einleitung/02_oberflaeche.html#arbeitsblattreiter",
    "href": "kapitel/einleitung/02_oberflaeche.html#arbeitsblattreiter",
    "title": "3  Bedienoberfläche",
    "section": "3.2 Arbeitsblattreiter",
    "text": "3.2 Arbeitsblattreiter\nDirekt unter dem Tabellenbereich zeigt Excel Register mit den Namen der Arbeitsblätter. Diese Register zeigen alle Arbeitsblätter einer Excel-Arbeitsmappe. Wenn eine neue, leere Arbeitsmappe erstellt wird, dann enthält diese nur ein Arbeitsblatt mit dem Namen Tabelle 1. Mit dem Plus-Symbol neben dem Arbeitsblattregistern können zusätzliche Arbeitsblätter in der Arbeitsmappe erzeugt werden."
  },
  {
    "objectID": "kapitel/einleitung/02_oberflaeche.html#menubalken",
    "href": "kapitel/einleitung/02_oberflaeche.html#menubalken",
    "title": "3  Bedienoberfläche",
    "section": "3.3 Menubalken",
    "text": "3.3 Menubalken\n\n\n\nAbbildung 3.2: Menubalken\n\n\nAm oberen Fensterrand von Excel befindet sich der Menubalken, der im Excel Jargon “Ribbon” heisst. Der Menubalken ist in verschiedene Kategorien unterteilt und sortiert so die verschiedenen interaktiven Kommandos von Excel.\n\nDefinition 3.4 Ein Kommando ist eine interaktive Anweisung an Excel, eine bestimmte Aktion auszuführen.\n\nKommandos werden immer interaktiv ausgelöst und lassen sich meist nicht durch Excel-Funktionen ersetzen.\nFür die tägliche Arbeit sind die folgenden Kategorien des Menubalkens am wichtigsten:\n\nStart\nEinfügen\nFormeln\nDaten\nTabelle"
  },
  {
    "objectID": "kapitel/einleitung/02_oberflaeche.html#funktionsleiste",
    "href": "kapitel/einleitung/02_oberflaeche.html#funktionsleiste",
    "title": "3  Bedienoberfläche",
    "section": "3.4 Funktionsleiste",
    "text": "3.4 Funktionsleiste\nDie Funktionsleiste unterstützt die Arbeit mit der aktiven Zelle. Die Funktionsleiste wird verwendet, wenn mit speziellen Werten oder mit Komplexen Formeln gearbetiet wird.\n\n\n\nAbbildung 3.3: Die Excel Funktionsleiste\n\n\nDie Funktionsleiste hat 6 Bedienfelder.\nGanz links ist das Adressfeld. Das Adressfeld zeigt uns immer die Adresse der aktiven Zelle an. Wenn wir dieses Feld anklicken, dann können wir eine andere Adresse eintragen. In diesem Fall springt die Markierung für die aktive Zelle an die entsprechende Adresse.\nDaneben befinden sich zwei unscheinbare Dreiecke. Dieses Bedienfeld verbirgt eine Liste der benannten Bereiche in der aktuellen Arbeitsmappe. Bei einer leeren Arbeitsmappe ist diese Liste leer.\nDie nächsten vier Bedienfelder gehören zusammen.\nGanz rechts wird der Inhalt der aktuellen Zelle angezeigt. Bei einer leeren Tabelle ist dieser Bereich selbstverständlich leer. Wenn dieser Bereich mit der Maus ausgewählt wird, dann erscheint ein senkrechter, blinkender Strick, der signalisiert, dass Werte oder Formeln eingegeben werden können. Wenn nun etwas eingegeben wird, dann erscheint diese Eingabe auch in der aktiven Zelle.\nIst die Eingabe abgeschlossen, dann kann diese mit dem grünen Haken oder mit der Eingabetaste bestätigt werden.\nIst bei der Eingabe ein Fehler passiert, dann lässt sich die Eingabe mit einem Mausklick auf das rote X oder mit der ESC-Taste abbrechen. Die Eingabe wird dann auf den ursprünglichen Zustand zurückgesetzt.\nWird die aktive Zelle nicht bearbeitet, dann sind der Hacken und das X ausgegraut und können nicht verwendet werden.\nDirekt neben dem Eingabefeld mit dem Inhalt der aktiven Zelle ist das Bedienfeld für den Formelgenerator. Der Formelgenerator ist ein Hilfsdialog, der die Suche nach geeigneten Formeln unterstützt. Der Formelgenerator unterscheidet sich von Menubalken Formeln durch eine kurze Erklärung über die Arbeitsweise einer ausgewählten Funktion."
  },
  {
    "objectID": "kapitel/einleitung/02_oberflaeche.html#statusleiste",
    "href": "kapitel/einleitung/02_oberflaeche.html#statusleiste",
    "title": "3  Bedienoberfläche",
    "section": "3.5 Statusleiste",
    "text": "3.5 Statusleiste\nAm unteren Rand von Excels Anwendungsfenster findet sich die Statusleiste. Die Statusleiste hat drei zentrale Funktionen:\n\nZoom der Tabellenanzeige,\nStatus von Excel und Fehlermeldungen und\nSchnellauswertung eines Zellbereichs.\n\n\n3.5.1 Zoom der Tabellenanzeige\nDer aktuelle Zoom der Arbeitsmappe und die Zoom-Einstellung finden sich ganz rechts in der Statusleiste. Dabei wird der aktuelle Zoom als ein Prozentwert dargestellt. Über den “Schieberegler” links daneben lässt sich der Zoom anpassen.\nWenn der Zoom-Wert angeklickt wird, dann erscheint ein kleiner Dialog, über denden Zoom-Wert als Prozentzahl direkt eingegeben kann. Das ist praktisch, wenn für eine Präsentation oder zum Arbeiten ein bestimmter Zoom-Wert bevorzugt wird.\n\n\n\n\n\n\nAchtung\n\n\n\nDie Zoom-Einstellung muss für jeddes Arbeitsblatt separat eingestellt werden und wird beim nächsten Speichern der Arbeitsmappe mitgesichert.\n\n\n\n\n3.5.2 Status und Fehlermeldungen\nAuf der linken Seite der Statusleiste ist der Status Bereich. Normalerweise wird an dieser Stelle den Wert Bereit angezeigt. Wenn eine Zelle bearbeitet wird, dann erscheint der Status Eingeben oder Zeigen.\nWenn einen Fehler bei der Eingabe einer Formel auftritt, dann wird neben dem Status eine Fehlermeldung eingeblendet. Diese unscheinbare Fehlermeldung wird immer dann wichtig, wenn eine Formel oder ein Algorithmus nicht zu rechnen scheint. In solchen Fällen hilft ein Blick auf den linken Rand der Statusleiste bei der Fehlersuche. Bei Fehlern zeit die Statusleiste einen Hinweis auf den Fehler sowie die Adresse der Zelle, an der Excel den Fehler vermutet.\nTritt ein Fehler auf, dann bricht Excel die Berechnung der gesamten Arbeitsmappe sofort ab und ignoriert alle Formeln, die nach der fehlerhaften Zelle berechnet werden müssten, selbst wenn die Formeln unabhängig voneinander wären. Damit Excel wieder arbeitet, müssen zuerst alle Fehler behoben werden.\n\n\n3.5.3 Schnellauswertung eines Zellenbereichs\nIm mittleren Bereich der Statusleiste ist normalerweise leer. Hier versteckt sich eine sehr nützliche Funktion zur schnellen Zusammenfassung der Werte in einem Bereich: Werden mehrere Zellen markiert, dann zeigt Excel den Mittelwert, die Summe und die Anzahl der ausgewählten Zellen an.\n\n\n3.5.4 Anpassen der Statusleiste\nWenn Sie mit der rechten Maustaste (Win) bzw. mit Control-Klick (Mac) auf die Statusleiste klicken, dann erhalten Sie eine Auswahlliste der Funktionen, die in der Statusleiste angezeigt werden sollen.\nSo lassen sich zusätzliche Funktionen in der Statusleiste aktivieren oder störende Elemente deaktivieren.\n\n\n\n\n\n\nWarnung\n\n\n\nDiese Einstellungen beziehen sich ausschliesslich auf die Excel-Installation und werden nicht zusammen mit der Arbeitsmappe gespeichert!"
  },
  {
    "objectID": "kapitel/daten-sammeln/kapitel.html#sec-datacollection-forms",
    "href": "kapitel/daten-sammeln/kapitel.html#sec-datacollection-forms",
    "title": "4  Daten sammeln",
    "section": "4.1 Daten mit Formularen sammeln",
    "text": "4.1 Daten mit Formularen sammeln\nDie direkte Eingabe von Daten ist nur für kleine Datensätze mit wenigen Merkmalen geeignet. Bei grösseren Datensätzen ist die direkte Eingabe oft zu aufwändig und fehleranfällig. Für die strukturierte Dateneingabe von grösseren Datensätzen werden Formulare verwendet.\nBei der Dateneingabe über Formulare werden die Daten mithilfe von Fragen mit vorgegebenen Antworttypen gesammelt. Der Antworttyp bestimmt, welche Werte für die Frage zulässig sind.\n\n\n\n\n\n\nHinweis\n\n\n\nIn vielen Formularsystemen wird der Antworttyp als Fragetyp bezeichnet, obwohl die Frage immer in Text-Bildform präsentiert wird und der Typ durch die unterschiedlichen Antwortmöglichkeiten bestimmt wird.\n\n\nDurch das Festlegen des Antworttyps wird gleichzeigt der Wertebereich des gemessenen Merkmals definiert. Dadurch ergibt sich beim Erstellen eines Formulars das Datenschema automatisch.\nExcel hat kein eingenes Formularsystem. Stattdessen kann Microsoft Forms verwendet werden. Microsoft Forms ist ein Online-Formulardienst, der in Microsoft365 integriert ist. Forms sammelt die Eingaben mit einem Formular und speichert die Daten in einer Excel Arbeitsmappe. Diese Formulare können über einen Web-Link geteilt werden und im Web-Browser ausgefüllt werden. Dadurch kann das Datensammeln auf verschiedene Personen verteilt werden.\n\n\n\n\n\n\nHinweis\n\n\n\nEin Formular kann in Microsoft Forms ein Quiz oder ein Formular sein. Ein Quiz ist ein Formular, bei dem die Antworten mit einer Punktzahl bewertet werden und ein Feedback erhalten können. Ein Formular fokussiert sich auf die reine Dateneingabe.\n\n\nMicrosoft Forms unterstützt die folgenden Antworttypen:\n\nOffene Antworttypen\n\nOffene Texteingabe\nDateumseingabe\nDatei hochladen\n\nGeschlossene Antworttypen\n\nEinfachauswahl\nMehrfachauswahl\nRangfolge\nLikert-Skala\nBewertung\nNet Promoter Score\n\n\nJede dieser Varianten hat die folgenden gemeinsamen Optionen:\n\nEine einleitende Frage oder Anweisung.\nEin optionaler Untertitel oder eine Beschreibung. (Untertitel)\nDie Möglichkeit eine mathematische Formel zur Validierung des Wertebereichs anzugeben (Mathematik).\nDas erzwingen einer Antwort (Erforderlich).\nEine Verzweigung zu einer anderen Frage, wenn eine bestimmte Antwort gegeben wird (Verzweigung).\n\nDie Unterschiede ergeben sich in den Antwortmöglichkeiten.\n\n4.1.1 Offene Texteingabe (Text)\nDie offene Texteingabe erlaubt einzeilige und mehrzeilige (lange) offene Antworten möglich sind. Damit können un- oder semistrukturierte Daten erfasst werden. Diese Antwortmöglichkeit lässt sich auf Zahlenwerte und Zahlenintervalle eingeschränken.\n\n\n4.1.2 Datumseingabe (Datum)\nDiese Eingabe ist eine Variante der offenen Texteingabe zur Eingabe eines Datums. Diese Eingabe wird durch die Option ergänzt, das Datum über eine Kalenderdarstellung auszuwählen.\nDas eingegebene Datum wird als Zahl gespeichert und als Datum dargestellt.\n\n\n4.1.3 Datei hochlanden\nDie zweite Variante für offene Antworten ist das Hochladen von Dateien. Mit diesem Antworttyp lassen sich Bilder, Videos oder Tonaufnahmen leicht erfassen.\n\n\n4.1.4 Einfachauswahl (Auswahl)\nDie Einfachauswahl ist ein Single-Choice-Antworttyp. Es sind nur die vorgegebenen Antwortmöglichkeiten möglich, von denen nur eine ausgewählt werden kann. Die Antwortmöglichkeiten können als Text oder als Bild angegeben werden. Die Antwortmöglichkeiten werden immer in einer Liste angezeigt. Dabei kann zwischen einem Auswahlmenu als Dropdown-Liste und frei anwählbaren Antwortmöglichkeiten (Optionen) gewählt werden.\nDie Reihenfolge der Antwortmöglichkeiten kann durch die Option Optionen in zufälliger Reihenfolge für jedes Formular zufällig angeordnet werden. Diese Option ist sinnvoll, wenn die Reihenfolge der Antwortmöglichkeiten die Antwort beeinflussen könnte. Soll ein Formular mehrfach durch die gleichen Personen ausgefüllt werden, dann sollte diese Option nicht aktiviert werden.\nDas Ergebnis der Einfachauswahl ist eine Zeichenkette der ausgewählten Option.\n\n\n4.1.5 Mehrfachauswahl (Auswahl)\nDie Mehrfachauswahl erlaubt die Auswahl mehrerer Antwortmöglichkeiten, indem die Option Mehrere Antworten aktiviert wird. Dieser Antworttyp ist ansonsten identisch mit der Einfachauswahl.\nDas Ergebnis der Mehrfachauswahl ist eine Zeichenkette mit den ausgewählten Optionen. Wurden mehrere Antworten ausgewählt, dann werden die Optionen durch ein Semikolon getrennt.\n\n\n4.1.6 Rangfolge\nDie Rangfolge erlaubt es, dass die angebotenen Antwortmöglichkeiten in eine Reihenfolge gebracht werden können. Bei diesem Antworttyp müssen die Werte sortiert werden und die Sortierung wird als Antwort gespeichert.\nBei der Darstellung werden die Antwortmöglichkeiten in einer Liste angezeigt und für jedes Formular neu sortiert.\nDas Ergebnis der Rangfolge ist eine Zeichenkette mit der Reihung der Optionen. Die Optionen werden durch ein Semikolon getrennt. Im Ergebnis lässt sich die Rangfolge nicht von einer Mehrfachauswahl unterscheiden.\n\n\n4.1.7 Likert-Skala (Likert)\nDer Antworttyp Likert setzt eine Fragebatterie mit Likert-Skalen um. Darüber lässt sich ein semantisches Differential erheben.\nDie Anworten dieser Fragebatterie werden wie mehrere Einfachauswahlen als Zeichenketten gespeichert. Deshalb muss für diesen Antworttyp immer eine Kodierungstabelle für die richtige Reihenfolge der Werte dokumentiert werden.\n\n\n4.1.8 Bewertung\nDie Bewertung ist eine Variante des Antworttyps Likert-Skala. Mit der Bewertung wird über eine festgelegte Skala der gewünschte Wert abgefragt. Optional können für die beiden Extremwerte Beschriftungen angegeben werden.\nDas Ergebnis wird als Zahl gespeichert. Die Zahl entspricht dem Wert der ausgewählten Option beginnend bei 1.\n\n\n4.1.9 Net Promoter Score\nDer Typ Net Promoter Score ist eine spezielle elfstufige Liker-Skala, die zwischen zwei frei wählbaren Extremwerten festgelegt ist. Die offiziell als Net Promoter Score (Reichheld, 2003) bezeichnete Eingabeform ist eine verzerrte Likert-Skala mit dem Mittelpunkt bei 7.5.\nDer Net Promoter Score wird immer als Ganzzahl im Intervall 0 \\le s \\le 10 zurückgegeben.\n\n\n\n\n\n\nWarnung\n\n\n\nDer Net Promoter Score hat im Management-Umfeld eine grosse Verbreitung gefunden. Die Verwendung dieser Skala ist aber umstritten (Keiningham et al., 2007). Speziell die proklamierte Aussagekraft lässt sich nicht belegen (Fisher & Kordupleski, 2019; Grisaffe, 2007). Von der verbreiteten isolierten Verwendung des Net Promoter Score nach der Methode von Reichheld (2003) wird deshalb abgeraten.\nWird diese Eingabe als Likert-Skala verwendet, dann besteht ausser bei der Darstellung kein Unterschied zur Einfachauswahl oder der Bewertung.\n\n\n\n\n4.1.10 Darstellung der Ergebnisse in Excel\nDie Ergebnisse der Formulare werden in einer Excel-Arbeitsmappe als Tabelle gespeichert. Die Antworten sind in der Spalte ID sequenziell durchnummeriert. Zusätzlich enthält die Tabelle zwei sog. Zeitstempel mit Datum und Uhrzeit des Beginns (Startzeit) und des Endes (Fertigstellungszeit) der Datenerfassung eines Formulars. Optional können die Namen und E-Mail-Adressen der ausfüllenden Person miterfasst werden.\nNach diesen Basisinformationen folgen die einzelnen Antworten für die Formularelemente. Die Werte in der gleichen Zeile entsprechen dabei den Werten aus dem gleichen Formular. Die Spaltenüberschriften sind Standardmässig der Fragetext."
  },
  {
    "objectID": "kapitel/daten-sammeln/kapitel.html#daten-direkt-eingeben",
    "href": "kapitel/daten-sammeln/kapitel.html#daten-direkt-eingeben",
    "title": "4  Daten sammeln",
    "section": "4.2 Daten direkt eingeben",
    "text": "4.2 Daten direkt eingeben\nBei der direkten Eingabe von Daten muss zuerst die Ergebnistabelle manuell erstellt werden, um damit die Daten zu sammeln.\nDamit die Daten einheitlich erfasst werden, benötigt die Tabelle ein Schema. In Excel wird diese Schema über die Tabellenüberschriften definiert und kann bei einer späteren Verarbeitung weiter angepasst werden (s. Kapitel 6).\nEin einfaches Datenschema umfasst nur die Spaltenüberschriften, die erfasst werden sollen. Dazu müssen die Tabellenüberschriften definiert werden. Die Tabellenüberschriften werden in der ersten Zeile der Tabelle eingetragen. Überschriften für weitere Merkmale können zu einem späteren Zeitpunkt noch ergänzt werden. Anschliessend werden die Überschriften markiert und es wird für diesen Bereich eine Tabelle eingefügt. Hierbei muss die Option Tabelle hat Überschriften aktiviert werden (s. Abbildung 4.1).\n\n\n\nAbbildung 4.1: Tabelle erstellen\n\n\nDaten werden der Tabelle hinzugefügt, indem in der Zeile unterhalb der Tabelle neue Werte eingetragen werden. Die Tabellenstruktur mit dem Schema wird automatisch erweitert.\n\n4.2.1 Schemadefinition durch Datenüberprüfung\nDie einfache Schemadefinition stellt nicht sicher, dass die Werte einheitlich abgelegt werden. Das kann später die Datenerfassung und die Datenverarbeitung behindern. Wurde die Datentabelle mit einem Überprüfungsschema erstellt, dann können die Werte in die Tabelle eingetragen und bei der Eingabe validiert werden.\nDie Schemadefinition durch Datenüberprüfung erlaubt die Wertebereiche der gemessenen Merkmale vorab festzulegen. Dadurch lassen sich potentielle Fehler bereits bei der Dateneingabe vermeiden. Hierzu ist es notwendig, die Wertebereiche und die zugehörige Datenklasse einer Spalte zu bestimmen.\n\n\n\n\n\n\nPraxis\n\n\n\nDas Erstellen eines Schemas zur Dateneingabe ist in Excel zwar aufwändig, dennoch sollte dieser Schritt nicht übersprungen werden, weil die Datenüberprüfung die Datenqualität verbessert und die Datenverarbeitung erheblich vereinfacht.\n\n\nIn Excel müssen Vektoren durch die Option Datenüberprüfung definiert werden. Die Option Datenüberprüfung findet sich im Ribbon unter Daten (s. Abbildung 4.2) im Abschnitt Datentools (s. Abbildung 4.3).\n\n\n\nAbbildung 4.2: Ribbon Datenüberprüfung\n\n\n\n\n\nAbbildung 4.3: Datentools Details\n\n\nDie Schemadefinition erfolgt in drei zusätzlichen Schritten:\n\nEs wird eine Platzhalterzeile eingefügt, indem die Zelle unterhalb der ersten Überschrift ausgewählt wird. Die Platzhalterzeile wird benötigt, um die Datenüberprüfung zu definieren.\nFür jeden Vektor wird mit der Option Datenüberprüfung eine Datenüberprüfung für den gewünschten Wertebereich definiert.\nDie Platzhalterzeile wird gelöscht.\n\n\n\n4.2.2 Funktionsweise der Datenüberprüfung\nDie Datenüberprüfung ist eine Funktion, die auf einen Bereich angewendet wird, wobei der Bereich eine einzelne Zelle, einer Zeile oder eine Spalte sein kann. Für das Schema einer Tabelle wird die Datenüberprüfung für eine Spalte eingerichtet.\nDie Datenüberprüfung wird Zellenweise konfiguriert, wobei die erste Zelle eines Bereichs die Referenzzelle ist. Die Datenüberprüfung wird auf die Referenzzelle angewendet und diese Konfiguration wird auf alle Zellen des Bereichs übertragen und automatisch so angepasst, dass die aktuelle Zelle überprüft wird. Dabei sind ein paar Besonderheiten zu beachten.\n\nDie Datenüberprüfung muss mit konstanten Adressen konfiguriert werden. Es muss also die doppelte Dollar-Adressierung (z.B. $A$2) verwendet werden.\nWird nicht die Referenzzelle als Adresse verwendet, dann erfolgt die Datenüberprüfung mithilfe der Werte der angegebenen Adresse. In den folgenden Zellen wird dann der relative Versatz zur Referenzzelle verwendet.\nKonstante Werte müssen in der Datenüberprüfung explizit angegeben und nicht über Bezüge verwiesen werden.\n\nExcel bringt einige vordefinierte Überprüfungen mit, die über die Dropdown-Liste ausgewählt werden können. Die meisten Überprüfungen sind für Zahlenintervalle definiert. Die Standardeinstellung Jeden Wert ist gleichbedeutend mit keiner Überprüfung, weil alle Werte als Eingabe akzeptiert werden. Generelle Überprüfungen von Datentypen sind nicht vorgegeben und müssen über die Option Benutzerdefiniert definiert werden.\n\n\n\nAbbildung 4.4: Dialog Datenüberprüfung mit allen Überprüfungsoptionen\n\n\n\n\n\n\n\n\nHinweis\n\n\n\nWird die Datenüberprüfung auf eine Zelle in einer Tabelle angewendet und in der jeweiligen Spalte existieren noch keine anderen Werte, dann wird die Datenüberprüfung für die gesamte Spalte übernommen. Stehen in der Tabelle bereits Werte, dann müssen zuerst alle Werte in der Spalte ausgewählt werden, bevor die Datenüberprüfung eingerichtet wird. Neue Werte übernehmen die Datenüberprüfung der vorangehenden Zeile.\n\n\n\n\n4.2.3 Datenüberprüfung für Zahlen, Zeichenketten oder Wahrheitswerte\nEine generelle Überprüfung für die fundamentalen Datentypen ist in Excel nicht vorgesehen. Solche Überprüfungen müssen über die Option Benutzerdefiniert festgelegt werden.\nIm Eingabefeld Formel kann eine beliebig komplexe Formel stehen. Die Formel muss einen Wahrheitswert zurückgeben. Wird der Wahrheitswert WAHR zurückgegeben, dann wird der Wert akzeptiert. Wird der Wahrheitswert FALSCH zurückgegeben, dann wird der Wert nicht akzeptiert.\nUm die fundamentalen Datentypen zu überprüfen, können die Informationsfunktionen ISTZAHL(), ISTTEXT() und ISTLOG() verwendet werden (s. Tabelle 4.1). Diese Funktionen geben WAHR zurück, wenn der Wert dem angegebenen Datentyp entspricht. Ansonsten geben sie FALSCH zurück.\n\n\nTabelle 4.1: Überprüfungsausdrücke für die fundamentalen Datentypen\n\n\nDatentyp\nÜberprüfungsausdruck\n\n\n\n\nZahlen\n=ISTZAHL($A$2)\n\n\nZeichenketten\n=ISTTEXT($A$2)\n\n\nWahrheitswerte\n=ISTLOG($A$2)\n\n\n\n\n\n\n4.2.4 Datenüberprüfung für ganze Zahlen\nDie Überprüfung ganzer Zahlen ist in Excel über die Option Ganze Zahl möglich. Diese Option überprüft, ob der Wert eine ganze Zahl ist. Diese Option kann aber nicht direkt für alle ganze Zahlen eingesetzt werden. Um alle zulässigen ganzen Zahlen zu erfassen muss unter der Option Daten der Punkt größer als ausgewählt werden. Anschliessend muss als Minimum der Wert -9.99999999999999E+307 eingetragen werden (s. Abbildung 4.5). Dieser Wert ist der kleinste Wert, der in Excel als (ganze) Zahl erfasst werden kann (Microsoft Support, 2023).\n\n\n\nAbbildung 4.5: Dialog Datenüberprüfung für alle ganzen Zaheln\n\n\n\n\n4.2.5 Datenüberprüfung für ordinalskalierte Wertebereiche\nFür ordinalskalierte Wertebereiche sollten die Werte am Besten als Ganzzahlen erfasst werden. Damit zu einem späteren Zeitpunkt diese Zahlen den eigentlichen Werten zugeordnet werden können, wird eine Zuordnungstabelle benötigt. Diese Zuordnungstabelle wird in einer separaten Tabelle erstellt. Diese Tabelle besteht aus zwei Spalten: Dem Zahlenwert und dem zugeordneten Wert. Die Ordnung der Werte ergibt sich aus der Ordnung der zugeordneten Zahlen.\n\n\n\n\n\n\nWichtig\n\n\n\nHäufig muss bei ordinalskalierten Wertebereichen die Option einer nicht zutreffenden Antwort berücksichtigt werden. In diesem Fall muss eine zusätzlicher Zahlenwert ausserhalb der regulären Ordnung definiert werden. Dieser Wert wird dann der nicht zutreffenden Antwort (z.B. NA oder nicht zutreffend) zugeordnet.\n\n\nDamit der Wertebereich korrekt eingeschränkt wird, muss die Option Liste verwendet werden. Die Quelle entspricht der Spalte mit den zugeordneten Zahlenwerten in der Zuordnungstabelle. Die Option Zellendropdown kann deaktiviert werden.\n\n\n\n\n\n\nAchtung\n\n\n\nDie Datenüberprüfung kann nicht mit Tabellenadressen umgehen. Deshalb müssen die gültigen Werte als absolute Arbeitsblattadressen angegeben werden (s. Abbildung 4.6).\n\n\n\n\n\nAbbildung 4.6: Datenüberprüfung mit Zuordnungstabelle für ordinalskalierte Wertebereiche\n\n\n\n\n4.2.6 Datenüberprüfung für nominalskalierte Wertebereiche\nDie Überprüfung nominalskalierter Wertebereiche wird in Excel durch die Option Liste realisiert. Die Option Liste erlaubt die Auswahl von Werten aus einer Liste in der gleichen Arbeitsmappe. Diese Liste ist einfach ein Bereich mit Werten, eine Spalte in einer anderen Tabelle oder eine benannte Liste (s. Kapitel 7). Die Liste muss in einer Spalte definiert werden, weil die Datenüberprüfung nur auf Spalten angewendet werden kann. Deshalb ist es nicht möglich, eine zeilenorientierte Liste für die Datenüberprüfung anzuwenden.\nFür nominalskalierte Wertebereiche werden alle zulässigen Werte in einer Spalte gestgelegt. Anschliessend wird im Dialog Datenüberprüfung unter Quelle der Bereich mit den zulässigen Werten angegeben.\n\n\n\n\n\n\nTipp\n\n\n\nIm Gegensatz zu ordinalskalierten Wertebereichen, sollten nominalskalierte Wertebereiche nicht als Zahlen kodiert werden, sondern als Zeichenketten erfasst werden.\n\n\nBei der Dateneingabe wird anschliessend ein Auswahlliste mit den zulässigen Werten, so dass die Werte nicht mehr direkt eingetippt werden müssen. Diese Auswahlliste kann unterbunden werden, wenn die Option Zellendropdown deaktiviert wird.\n\n\n\n\nFisher, N. I., & Kordupleski, R. E. (2019). Good and bad market research: A critical review of Net Promoter Score. Applied Stochastic Models in Business and Industry, 35(1), 138–151. https://doi.org/10.1002/asmb.2417\n\n\nGrisaffe, D. B. (2007). Questions about the ultimate question: conceptual considerations in evaluating Reichheld’s Net Promoter Score (NPS). 20.\n\n\nKeiningham, T. L., Cooil, B., Andreassen, T. W., & Aksoy, L. (2007). A Longitudinal Examination of Net Promoter and Firm Revenue Growth. Journal of Marketing, 71(3), 39–51. https://doi.org/10.1509/jmkg.71.3.039\n\n\nMicrosoft Support. (2023). Excel specifications and limits. https://support.microsoft.com/en-gb/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\n\n\nReichheld, F. F. (2003). The One Number You Need to Grow. Harvard Business Review."
  },
  {
    "objectID": "kapitel/datentypen/kapitel.html#fundamentale-datentypen",
    "href": "kapitel/datentypen/kapitel.html#fundamentale-datentypen",
    "title": "5  Datentypen",
    "section": "5.1 Fundamentale Datentypen",
    "text": "5.1 Fundamentale Datentypen\nExcel kennt sechs fundamentale Datentypen.\n\nZahlen\nZeichenketten\nWahrheitswerte\nFehlerwerte\nFormeln\nleere Zelle\n\n\n5.1.1 Zahlen\nZahlen werden in Excel immer als Gleitkommazahlen behandelt. Excel kennt von keine ganzen Zahlen. Wenn eine Zahl in eine ganze Zahl umgewandelt wird (z.B. durch die Funktion GANZZAHL), wird lediglich der Nachkommaanteil der Zahl auf 0 gesetzt.\nManche Excel Funktionen arbeiten nur mit ganzen Zahlen. In diesen Fällen wird der Nachkommaanteil der Zahl automatisch abgeschnitten.\nDurch die Verwendung von Gleitkommazahlen können in Excel Zahlen mit einer Genauigkeit von 15 signifikanten Stellen dargestellt werden. Werden zwei Zahlen addiert, und das Ergebnis mehr als 15 signifikante Stellen hätte, werden die alle Stellen ab der 15. signifikanten Stelle abgeschnitten. Excel versucht diese Fehler möglichst zu vermeiden.\nDer Datentyp Zahlen wird in Excel mit der Funktion ISTZAHL() geprüft. Die Funktion ISTZAHL() liefert WAHR, wenn der Wert ein Zahl ist, und sonst FALSCH.\n\n\n5.1.2 Zeichenketten\nZeichenketten heissen in Excel Text. Zeichenketten werden von Excel automatisch gewählt, wenn kein anderer Datentyp für eine Eingabe erkannt wurde. Um die automatische Erkennung zu verhindern, muss der Apostroph-Dekorator (s. Abschnitt 5.2.1) verwendet werden.\nIm Formelmodus müssen Zeichenketten in doppelte Anführungszeichen eingeschlossen werden. Im Wertemodus müssen Zeichenketten meist nicht besonders markiert werden.\nDer Datentyp Zeichenkette wird in Excel mit der Funktion ISTTEXT() geprüft. Die Funktion ISTTEXT() liefert WAHR, wenn der Wert eine Zeichenkette ist, und sonst FALSCH.\nBesondere Zeichenketten sind Adressen bzw. im Excel Jargon Bezüge. Die Funktion ISTBEZUG() prüft, ob eine Zeichenkette eine gültige Excel Adresse ist. Die Funktion ISTBEZUG() liefert WAHR, wenn die Zeichenkette eine Adresse ist, und sonst FALSCH.\n\n\n5.1.3 Wahrheitswerte\nWahrheitswerte heissen in Excel WAHR und FALSCH. Wahrheitswerte heissen im Excel Jargon logische Werte. Während der Werteeingabe werden Wahrheitswerte unabhängig von der Gross- und Kleinschreibung automatisch erkannt.\nIm Formelmodus dürfen Wahrheitswerte nicht in Anführungszeichen eingeschlossen werden, weil sonst die Symbole als Zeichenkette behandelt werden.\nDer Datentyp Wahrheitswerte wird in Excel mit der Funktion ISTLOG() geprüft. Die Funktion ISTZLOG() liefert WAHR, wenn der Wert ein Wahrheitswert ist, und sonst FALSCH.\n\n\n5.1.4 Fehlerwerte\nFehlerwerte ist in Excel ein besonderer Datentyp, um Fehler zu signalisieren. Fehler beginnen immer mit einem Gatter (#), das von einem sog. Fehlerbezeichner gefolgt wird. In der Regel werden Fehlerwerte automatisch erzeugt, es ist aber möglich, Fehlerwerte auch manuell einzugeben. Bei der manuellen Eingabe von Fehlerwerten werden nur die gültigen Fehlerbezeichner akzeptiert. Andere Symbolfolgen werden als Zeichenketten interpretiert.\nExcels gültige Fehlerwerte sind #NV, #NULL!, #WERT!, #BEZUG!, #DIV/0!, #ZAHL!, #NAME?, #KALK!, #ÜBERLAUF!, #DATEN_ABRUFEN! und #ZAHL!.\nDer Wert #NV wird in Excel verwendet, um einen ungültigen Wert zu verweisen. Dieser Wert ist nicht gleichbedeutend mit fehlenden Werten.\nDer Datentyp Fehlerwert wird in Excel mit der Funktion ISTFEHLER() geprüft. Die Funktion ISTFEHLER() liefert WAHR, wenn der Wert ein Fehlerwert ist, und sonst FALSCH. Um einen bestimmten Fehlerwert zu prüfen, kann die Funktion FEHLER.TYP() mit dem entsprechenden Fehlerbezeichner als Argument verwendet werden. Diese Funktion gibt einen eindeutigen Zahlenwert für den Fehler zurück. Ist der Wert kein Fehlerwert, dann wird der Fehler #NV zurückgegeben.\n\n\n5.1.5 Formeln\nFormeln sind ein eigener Datentyp, die mit dem Gleich-Dekorator (=) beginnen. Eine Formel besteht immer aus einem Wert, einem Funktionsaufruf oder einer Kombination von Werten und Funktionsaufrufen, die durch Operatoren verknüpft wurden.\nDer Datentyp Formel wird in Excel mit der Funktion ISTFORMEL() geprüft. Die Funktion ISTFORMEL() liefert WAHR, wenn der Wert eine Formel ist, und sonst FALSCH.\nFormeln sind in Excel ein besonderer Datentyp, denn eine Zelle mit einer Formel hat immer zwei Datentypen. Der erste Datentyp ist der Datentyp Formel, der zweite Datentyp ist der Datentyp des Formelergebnisses.\n\n\n5.1.6 Leere Zellen\nLehre Zellen sind Zellen, die keinen Wert enthalten. Leere Zellen zeigen fehlende Werte in Excel an.\nDie Leere Zelle ist für Excel ein eingener Datentyp und wird mit der Funktion ISTLEER() geprüft. Die Funktion ISTLEER() liefert WAHR, wenn der Wert eine leere Zelle ist, und sonst FALSCH.\n\n\n\n\n\n\nWarnung\n\n\n\nEine leere Zelle und eine leere Zeichenkette lassen sich mit dem Auge nicht unterscheiden. Die Funktion ISTLEER() liefert für eine leere Zeichenkette FALSCH zurück, weil die Zelle einen Wert enthält.\n\n\nLeere Zellen als Ergebnis einer Formel werden von Excel in die Zahl 0 umgewandelt. Im Kapitel Abschnitt 7.2 wird gezeigt, wie sich leere Zellen von Zellen mit dem Wert 0 unterscheiden lassen. Im Abschnitt 7.4.1 wird auf leere Zellen als Funktionsergebnisse ausführlich eingegangen."
  },
  {
    "objectID": "kapitel/datentypen/kapitel.html#dekoratoren",
    "href": "kapitel/datentypen/kapitel.html#dekoratoren",
    "title": "5  Datentypen",
    "section": "5.2 Dekoratoren",
    "text": "5.2 Dekoratoren\n\nDefinition 5.1 Ein Dekorator ist Sprachelement einer Programmiersprache, mit dem die normale Interpretation von Symbolen verändert werden kann.\n\nExcel hat zwei Dekoratoren, als erstes Symbol einer Zelle stehen müssen. D.h. es dürfen auch keine Leerzeichen vor einem Dekorator stehen. Die beiden Dekoratoren sind:\n\nDer Apostroph-Dekorator (')\nDer Gleich-Dekorator (=)\n\n\n5.2.1 Apostroph-Dekoraktor\nDer Apostroph-Dekorator (') erzwingt, dass die nachfolgenden Symbole als Zeichenkette interpretiert werden müssen.\nMithilfe des Apostroph-Dekorators wird die automatische Typerkennung für die laufende Eingabe deaktiviert. Auf diese Weise lassen sich Zeichenketten eingeben, die nur aus Ziffern bestehen oder Zeichenketten, die Datentumswerten ähneln.\nDer Apostroph-Dekorator muss zwingend verwendet werden, wenn auf eine Zeichenkette eine der folgenden Bedingungen zutrifft.\n\nDie Zeichenkette beginnt mit einem Gleichheitszeichen (=), einem Pluszeichen (+), einem Minuszeichen (-) oder einem Prozentzeichen (%).\nDie Zeichenkette besteht nur aus Ziffern, dem Dezimaltrenner (.) oder dem Tausendertrenner (‘) enthält\nDie Zeichenkette ähnelt der wissenschaftliche Notation für Zahlen mit und ohne Vorzeichen für den Exponenten. Z.B. 5.E3.\nDie Zeichenkette ähnelt einm Datum.\nDie Zeichenkette entspricht einen Fehlerwert, unabhängig von der Schreibweise. Z.B. #nv.\nDie Zeichenkette entspricht einem Wahrheitswert (WAHR oder FALSCH) unabhängig von der Schreibweise.\n\nDas Apostroph kann entfallen, wenn die aktive Zelle vorher bereits als Datentyp Text formatiert wurde. In diesem Fall verlieren alle Symbole ihre spezielle Bedeutung. In solche Zellen können keine Formeln eingegeben werden.\n\n\n5.2.2 Gleich-Dekorator\nDer Gleich-Dekorator (=) zeigt an, dass die nachfolgenden Symbole als Formel interpretiert werden müssen.\nBei der Eingabe des Gleich-Dekorators wechselt Excel für die laufende Eingabe in den Formelmodus. Mit beeenden der Eingabe mit der Eingabetaste wird der Formelmodus wieder verlassen und das Ergebnis der eingegebenen Formel wird in der Zelle angezeigt."
  },
  {
    "objectID": "kapitel/datentypen/kapitel.html#komplexe-datenstrukturen",
    "href": "kapitel/datentypen/kapitel.html#komplexe-datenstrukturen",
    "title": "5  Datentypen",
    "section": "5.3 Komplexe Datenstrukturen",
    "text": "5.3 Komplexe Datenstrukturen\nExcel kennt zwei komplexe Datenstrukturen:\n\nBereiche\nTabellen\n\nExcels komplexe Datenstrukturen müssen einen fundamentalen Datentyp haben und können keine komplexen Datenstrukturen schachteln.\n\n5.3.1 Bereiche: Vektoren und Matrizen\nExcels Grundstruktur ist das Rechteck, dass durch die markierten Zellen entsteht. Dieses Rechteck heisst im Excel Jargon ein Bereich.\nObwohl Excel vektorähnliche Bereiche kennt, ist es sinnvolle sich Excels Bereiche immer als Matrizen vorzustellen.\n\nEin Bereich mit nur einer Zelle ist eine 1x1- oder 0-dimensionale Matrix.\nEin Bereich mit nur einer Zeile oder einer Spalte ist für Excel eine 1xn- oder 1-dimensionale Matrix. Diese speziellen Matrizen werden in der Regel als Vektoren bezeichnet.\nEin Bereich mit mehreren Zeilen und Spalten ist eine nxm- oder 2-dimensionale Matrix.\n\nFunktionen können Bereiche als Ergebnis haben. In diesem Fall werden die restlichen Werte zeilen und spaltenweise unterhalb bzw. rechts von der entsprechenden Formel ausgegeben.\n\n\n5.3.2 Tabellen\nTabellen sind benannte Bereiche, die Vektoren enthalten. Tabellen bestehen aus Spalten, in denen die Werte als Vektoren stehen. Excel Tabellen haben immer Überschriften.\nExcel kennt zwei Arten von Tabellen:\n\nWertetabellen\nPivot-Tabellen.\n\n\nDefinition 5.2 Wertetabellen sind Listen, die Listen mit gleicher Länge schachteln.\n\nWertetabellen entsprechen ungefähr einem Datenrahmen (engl. data-frame) in anderen Programmiersprachen. Der Unterschied zu einem Datenrahmen ist, dass Excels Wertetabellen keine Vektoren erzwingen. Deshalb können in der gleichen Spalte einer Wertetabelle verschiedene Datentypen gemischt werden.\n\nDefinition 5.3 Pivot-Tabellen sind ein Werkzeug zum interaktiven Zusammenfassen von Daten.\n\nPivot-Tabellen erleichtern einfache Datenanalysen. Pivot-Tabellen entsprechen einer tabellarischen Darstellung der Daten. Ihre Funktion ist auf wenige analytische Funktionen beschränkt und die dargestellten Werte lassen sich nur umständlich weiterverarbeiten.\nPivot-Tabellen sind Arbeitsmappenelemente aber keine Datenstrukturen. Deshalb werden Pivot-Tabellen in diesem Buch ähnlich einer Visualisierung als Darstellungsform behandelt."
  },
  {
    "objectID": "kapitel/datentypen/kapitel.html#sec-adressierung-ds",
    "href": "kapitel/datentypen/kapitel.html#sec-adressierung-ds",
    "title": "5  Datentypen",
    "section": "5.4 Adressierung von Datenstrukturen",
    "text": "5.4 Adressierung von Datenstrukturen\n\nDefinition 5.4 Ein Bezug ist die Adresse eines Bereichs.\n\nIn Excel gibt es zwei Arten von Bezügen:\n\nArbeitsblattadressen\nTabellenadressen\n\n\n5.4.1 Arbeitsblattadressen\n\nDefinition 5.5 Eine Arbeitsblattadresse enthält die Koordinaten eines Bereichs auf einem Arbeitsblatt.\n\nArbeitsblattadressen besteht aus drei Teilen:\n\nArbeitsblattname\nBereichsbeginn\nBereichsende\n\nDer Bereichsbeginn verweist immer auf die linke obere Zelle des Bereichs. Der Bereichsende verweist immer auf die rechte untere Zelle des Bereichs. Eine Zelle wird immer durch den Spaltenindex (Buchstabe) und den Zeilenindex (Zahl) identifiziert. Werden die Koordinaten des Bereichsbeginns und des Bereichsendes bei der Eingabe vertauscht, dann wird der Bereich automatisch korrigiert.\n\nBeispiel 5.1 (Arbeitsblattadresse)  \nTabelle1!A1:C3\n\nBeispiel 5.1 verweist auf den Bereich mit drei Spalten und drei Zeilen auf dem Arbeitsblatt Tabelle1 beginnend mit der Zelle A1 und endend mit der Zelle C3.\nOft werden Arbeitsblattadressen nicht vollständig sondern gekürzt angegeben. Es gibt zwei Möglichkeiten, um Arbeitsblattadressen zu kürzen:\n\nWerden Bereiche auf dem gleichen Arbeitsblatt adressiert, dann kann der Tabellenname weggelassen werden.\nWird ein Bereich mit nur einer Zelle adressiert, dann wird das Bereichsende weggelassen.\n\nWeil Arbeitsblattadressen von vielen interaktiven Excelkommandos verwendet werden, gibt es zwei Arten von Arbeitsblattadressen:\n\nRelative Adressen\nAbsolute Adressen\n\nDie Art der Adresse legt fest, wie ein interaktives Kommando mit einer Adresse umgehen soll. Die populärste interaktive Funktion ist das Autoauffüllen. Dabei wird eine Zelle mit einer Formel interaktiv auf einen Bereich von Zellen übertragen.\n\n\n\n\n\n\nWarnung\n\n\n\nDas Autoauffüllen ist eine einfache und beliebte Methode, um Formeln in Excel auf verschiedene Werte wiederholt anzuwenden. Bis 2019 war das Autoauffüllen die einzige Möglichkeit für die Datentransformation.\nDie relative und absolute Adressierung ist eine wichtige Voraussetzung für das Autoauffüllen. Leider ist das Autoauffüllen auch die Ursache für viele Fehler beim Umgang mit Excel.\n\n\n\n\n\n\n\n\nPraxis\n\n\n\nIn Excel365 kann das Autoauffüllen durch vektorisierte Funktionen fast vollständig ersetzt werden. Dadurch lassen sich viele Excel-typische Fehler vermeiden. Dadurch ist die Unterscheidung zwischen der relativen und absoluten Adressierung nicht mehr so wichtig.\n\n\n\n5.4.1.1 Relative Adressen\n\nDefinition 5.6 Eine relative Adresse ist eine Adresse eines Bereichs, die veränderlich ist.\n\nRelative Adressen werden in Excel von interaktiven Funktionen, wie dem Autoauffüllen verwendet, um die Adressen automatisch anzupassen. Eine relative Adresse wird relativ zur aktuellen Zelle angepasst.\nEin Beispiel für eine relative Adresse ist A1. Diese Adresse bezeichnet die Zelle, die sich in der ersten Zeile und der ersten Spalte auf dem aktuellen Arbeitsblatt befindet. Wird die adressierte Zelle interaktiv nach unten aufgefüllt, dann wird die Adresse automatisch zu A2, A3, usw. angepasst. Wird die adressierte Zelle nach rechts aufgefüllt, dann wird die Adresse automatisch zu B1, C1, usw. angepasst.\n\n\n5.4.1.2 Absolute Adressen\n\nDefinition 5.7 Eine absolute Adresse ist eine Adresse eines Bereichs, die ganz oder teilweise unveränderlich ist.\n\nDer unveränderliche Teil einer Arbeitsblattadresse wird mit einem Dollarzeichen ($) markiert. Dieser Teil der Adresse wird bei der Anpassung der Adresse nicht verändert. So lassen sich Adressen angeben, die durch interaktive Kommandos nicht verändert werden.\nEin Beispiel für eine absolute Adresse ist $A$1. Diese Adresse bezeichnet die Zelle, die sich in der ersten Zeile und der ersten Spalte auf dem aktuellen Arbeitsblatt befindet. Wird die adressierte Zelle interaktiv horizontal oder vertikal aufgefüllt, dann wird die Adresse nicht angepasst.\nAuf diese Weise lassen sich konstante Werte in Formeln einbauen.\n\n\n\n5.4.2 Tabellenadressen\nSpalten und einzelne Werte können über die Tabellenadressierung abgefragt werden (Microsoft Support, 2023). Das Ergebnis einer solchen Adressierung ist immer ein dynamisches Feld bzw. ein dynamischer Bereich (s. Abschnitt 7.1.1).\n\n\n\n\n\n\nHinweis\n\n\n\nJede Tabellenadresse kann auch als Arbeitsblattadresse dargestellt werden. Umgekehrt ist dies nicht möglich.\n\n\nEine Tabellenadresse besteht aus zwei Teilen:\n\nDem Tabellennamen\nDem Spaltennamen\n\n\nBeispiel 5.2 (Tabellenadresse)  \nTabelle1[Spalte1]\n\nDas Beispiel 5.2 verweist auf die Spalte Spalte1 der Tabelle Tabelle1.\n\n\n\n\n\n\nWichtig\n\n\n\nDie Namen von Tabellen sind unabhängig den Arbeitsblattnamen. In der gleichen Arbeitsmappe darf jeweils nur eine Tabelle und nur ein Arbeitsblatt mit dem gleichen Namen existieren. Es ist aber möglich, dass eine Tabelle und ein Arbeitsblatt den gleichen Namen haben. Das kann zu Verwirrungen führen, denn die Adresse Tabelle1[Spalte1] und die Adresse Tabelle1!A:A verweisen nicht zwingend auf die gleiche Spalte, denn eine Tabelle muss nicht auf einem Arbeitsblatt mit dem gleichen Namen stehen!\n\n\nTabellenadressen können auch gekürzt werden:\n\nWerden Spalten in der gleichen Tabelle angesprochen, dann kann der Tabellenname weggelassen werden.\nSoll die gesamte Tabelle angesprochen werden, dann kann der Spaltenname weggelassen werden.\n\n\n5.4.2.1 Tabellenbereiche\nUm mehrere Spalten einer Tabelle anzusprechen kann der Bereichsoperator (:) wie bei der Arbeitsblattadressierung verwendet werden. Zusätzlich müssen die Spalten in ein weiteres Paar eckiger Klammern eingeschlossen werden.\n\nBeispiel 5.3 (Tabellenbereich)  \nTabelle1[[Spalte1]:[Spalte3]]\n\nBeispiel 5.3 verweist auf alle Spalten zwischen Spalte1 und Spalte3 der Tabelle Tabelle1.\n\n\n\n\n\n\nWarnung\n\n\n\nWerden zu einem späteren Zeitpunkt neue Spalten zwischen den adressierten Spalten hinzugefügt, dann werden die neuen Spalten automatisch in die Adressierung einbezogen.\n\n\n\n\n\n\n\n\nWichtig\n\n\n\nEs ist nicht möglich mehrere Spalten einer Tabellen gleichzeitig gezielt zu adressieren, wenn diese nicht unmittelbar nebeneinander stehen. Diese Adressierung ist unmöglich, weil Excel nur rechteckige Bereiche adressieren kann und solche Spalten keinen rechteckigen Bereich bilden.\nDie Adressierung aus Beispiel 5.3 kann nicht angepasst werden, so dass nur Spalte1 und Spalte3 adressiert werden, ausser die Spalten Spalte1 und Spalte3 stehen direkt nebeneinander.\n\n\n\n\n5.4.2.2 Überschriften adressieren\nEine Excel Tabelle hat immer Spaltenüberschriften. Diese Überschriften können ebenfalls über die Tabellenadressierung adressiert werden. Dazu wird als Spaltenname der Wert #Kopfzeilen verwendet.\n\nBeispiel 5.4 (Kopfzeilen einer Tabelle adressieren)  \nTabelle1[#Kopfzeilen]\n\nUm gezielt Kofzeilen zu adressieren, kann die Adressierung aus Beispiel 5.4 mit der Adressierung aus Beispiel 5.3 kombiniert werden (Beispiel 5.5).\n\nBeispiel 5.5 (Kopfzeilen einer Tabelle adressieren)  \nTabelle1[[#Kopfzeilen];[Spalte1]:[Spalte3]]\n\n\n\n5.4.2.3 Absolute Adressierung in Tabellen\nEin Tabellenbereich ist immer absolut adressiert. Wird aber nur eine einzelne Spalte einer Tabelle adressiert, dann wird die Adresse relativ addressiert. Damit beim Autoauffüllen diese Adresse nicht verändert wird, muss die Adresse als Bereich angegeben werden.\n\nBeispiel 5.6 (Absolute Tabellenadressierung von einer Spalte)  \nTabelle1[[Spalte1]:[Spalte1]]\n\nWird eine Formel mit dieser Adresse interaktiv aufgefüllt, dann wird die Adresse nicht verändert.\n\n\n\n\nMicrosoft Support. (2023). Using structured references with Excel tables. https://support.microsoft.com/en-gb/office/using-structured-references-with-excel-tables-f5ed2452-2337-4f71-bed3-c8ae6d2b276e"
  },
  {
    "objectID": "kapitel/daten-importieren/kapitel.html",
    "href": "kapitel/daten-importieren/kapitel.html",
    "title": "6  Daten importieren",
    "section": "",
    "text": "Work in Progress"
  },
  {
    "objectID": "kapitel/variablen/kapitel.html#variablen",
    "href": "kapitel/variablen/kapitel.html#variablen",
    "title": "7  Variablen, Funktionen und Operatoren",
    "section": "7.1 Variablen",
    "text": "7.1 Variablen\nKeine Unterscheidung zwischen Konstanten und Variablen.\n\n7.1.1 Dynamische Bereiche\n\n\n7.1.2 Benannte Bereiche\n\n\n\n\n\n\nHinweis\n\n\n\nEine Tabelle ist ein spezieller benannter Bereich."
  },
  {
    "objectID": "kapitel/variablen/kapitel.html#sec-funktionen",
    "href": "kapitel/variablen/kapitel.html#sec-funktionen",
    "title": "7  Variablen, Funktionen und Operatoren",
    "section": "7.2 Funktionen",
    "text": "7.2 Funktionen"
  },
  {
    "objectID": "kapitel/variablen/kapitel.html#operatoren",
    "href": "kapitel/variablen/kapitel.html#operatoren",
    "title": "7  Variablen, Funktionen und Operatoren",
    "section": "7.3 Operatoren",
    "text": "7.3 Operatoren\nExcel hat eine Anzahl vordefinierter Operatoren. Diese Operatoren haben keine direkte Entsprechung als Funktion.\n\n7.3.1 Substitution über Funktionspfade\n\n\n7.3.2 Substitution mit LET()"
  },
  {
    "objectID": "kapitel/variablen/kapitel.html#funktionsketten",
    "href": "kapitel/variablen/kapitel.html#funktionsketten",
    "title": "7  Variablen, Funktionen und Operatoren",
    "section": "7.4 Funktionsketten",
    "text": "7.4 Funktionsketten\n\nFunktionsketten mit LET\n\n\n7.4.1 Leere Zellen in einer Funktionskette\nNormalerweise werden leere Zellen als Ergebnis einer Funktion durch 0 ersetzt. Dieses Konvertierung findet erst bei der Darstellung des Ergebnisses statt. Innerhalb einer Funktionskette werden leere Zellen als leere Zellen weitergereicht, solange keine Aggregation vorgenommen wird. Es ist deshalb möglich in einer Funktionskette eine Entscheidung mit ISTLEER() für den Fall einer leeren Zelle zu treffen.\n## Funktionen selbst definieren\nLAMBDA Funktion\nStrategie der Funktionsentwicklung - Funktion als Funktionspfad - Funktion als Funktionskette - Funktion als LAMBDA Funktion - Funktion als benanntes Element"
  },
  {
    "objectID": "kapitel/zeichenketten/kapitel.html",
    "href": "kapitel/zeichenketten/kapitel.html",
    "title": "8  Zeichenketten",
    "section": "",
    "text": "Work in Progress"
  },
  {
    "objectID": "kapitel/boolsche-operationen/kapitel.html#wahrheitswerte-in-excel",
    "href": "kapitel/boolsche-operationen/kapitel.html#wahrheitswerte-in-excel",
    "title": "9  Aussagenlogik",
    "section": "9.1 Wahrheitswerte in Excel",
    "text": "9.1 Wahrheitswerte in Excel\nWie im Kapitel Datentypen bereits erwähnt, kennt Excel den Datentyp der Wahrheitswerte. Diese Wahrheitswerte können entweder den Wert WAHR oder FALSCH haben. Eine Operation, die Wahrheitswerte ergibt wird als logischer Ausdruck bezeichnet. Weil logische Ausdrücke für viele Funktionen und Operationen notwendig sind, wandelt Excel die Werte anderer Datentypen bei Bedarf um. Dabei gelten die folgenden Regeln:\n\n0 und die leere Zelle entspricht dem Wert FALSCH.\nAlle Zahlen ungleich 0 entstprechen dem Wert WAHR.\nAlle Zeichenketten inklusive der leeren Zeichenkette entsprechen dem Wert WAHR.\nFehlerwerte bleiben unverändert.\n\nWerden Wahrheitswerte in mathematischen Operationen und Funktionen verwendet, dann konvertiert Excel den Wert FALSCH in 0 und den Wert WAHR in 1 um.\nWerden Wahrheitswerte als Parameter an Zeichenkettenfunktionen übergeben, dann werden die Wahrheitswerte in die entsprechende Zeichenkette umgewandelt. Aus dem Wert WAHR wird also die Zeichenkette \"WAHR\" und aus dem Wert FALSCH wird die Zeichenkette \"FALSCH\".\n\n\n\n\n\n\nWarnung\n\n\n\nWahrheitswerte werden in den verschiedenen Sprachversionen von Excel in der eingestellten Sprache angegeben. Beim Wechsel zwischen verschiedenen Excel-Sprachversionen werden die Wahrheitswerte automatisch korrekt angezeigt. Die Umwandlung in Zeichenketten erfolgt dann in der jeweiligen Sprache. Deshalb sollte die Verwendung von in Zeichenketten konvertierten Wahrheitswerten in nachgelagerten Funktionen vermieden werden."
  },
  {
    "objectID": "kapitel/boolsche-operationen/kapitel.html#aussagenlogische-operationen",
    "href": "kapitel/boolsche-operationen/kapitel.html#aussagenlogische-operationen",
    "title": "9  Aussagenlogik",
    "section": "9.2 Aussagenlogische Operationen",
    "text": "9.2 Aussagenlogische Operationen\nFür Wahrheitswerte existieren spezielle Operationen, um die Regeln der Aussagenlogik bzw. der Boole’schen Algebra abzubilden. Diese Operationen verknüpfen Wahrheitswerte und haben Wahrheitswerte als Ergebnis. Die vier Grundoperationen NICHT (\\lnot), UND (\\land), ODER (\\lor, “inklusives Oder”) und XODER (\\oplus, “entweder-oder”) sind in Excel als Funktionen verfügbar.\nDie Funktion NICHT() wandelt einen Wert in den jeweils den anderen Wahrheitswert um. Falls anstelle eines Wahrheitswerts ein anderer Datentyp übergeben wurde, gelten die oben angegebenen Regeln für die Umwandlung.\nDie Funktionen UND(), ODER() und XODER() sind Aggregatoren. Das bedeutet, dass Sie alle Werte in dem angegebenen Bereichen zusammenfassen. Das ist oft nicht das gewünschte Verhalten. Deshalb muss bei der Arbeit mit Vektoren auf die Bool’sche Arithmetik zurückgegriffen werden, um logische Ausdrücke richtig auszuwerten.\nZum Beispiel sollen für die folgenden Werte paarweise der logische Ausdruck a \\land b ausgewertet werden, so dass für alle Wertepaare der richtige Wahrheitswert ermittelt wird.\n\n\n\nA\nB\n\n\n\n\nWAHR\nFALSCH\n\n\nFALSCH\nWAHR\n\n\nWAHR\nWAHR\n\n\nFALSCH\nWAHR\n\n\nWAHR\nWAHR\n\n\nFALSCH\nFALSCH\n\n\n\nDie Formel = UND(A1:A6; B1:B6) liefert den Wert FALSCH zurück, weil nicht alle Werte im gesamten Bereich von A1:A6 und B1:B6 gleich WAHR sind. Es gibt keine Funktion und keinen eigenen logischen Operator zur paarweisen logischen Verknüpfung dieser beiden Bereiche. Deshalb werden in Excel oft logische Ausdrücke in der Boole’schen Arithmethik eingesetzt, um nur die Werte aus den gleichen Datensätzen miteinander zu vergleichen. Diese Schreibweise ist immer dann notwendig, wenn logische Ausdrücke sich auf die einzelnen Datensätze beziehen.\nDie Formel = A1:A6 * B1:B6 hat die Werte {0;0;1;0;1;0} zum Ergebnis. Um Wahrheitswerte zuerhalten kann noch auf die Ungleichheit mit 0 geprüft werden. Dazu wird die Formel wie folgt ergänzt: = (A1:A6 * B1:B6) &lt;&gt; 0. Das Ergebnis ist nun {FALSCH; FALSCH; WAHR; FALSCH; WAHR; FALSCH}. Dieser Schritt ist in der Praxis selten notwendig, weil für die meisten Operationen Zahlenwerte implizit als Wahrheitswerte behandelt werden.\nWeil Excel alle Werte ungleich 0 als WAHR interpretiert, können die Operationen UND() mit * und die Operation ODER() mit + direkt ersetzt werden. Hierbei ist darauf zu achten, dass das nummerische Ergebnis dieser Addition oder Multiplikation ausschliesslich als Wahrheitswert von Bedeutung ist.\nDie Operation XODER() entspricht der Ungleichheit &lt;&gt;. Dabei muss allerdings darauf geachtet werden, das dieser Vergleich als Ersatz für XODER() ausschliesslich für Wahrheitswerte bzw. 0 und 1 erlaubt ist. Für die oben gezeigten Werte ergibt die Formel = (A1:A5 &lt;&gt; B1:B5) die Werte {WAHR; WAHR; FALSCH; WAHR; FALSCH; FALSCH}. Das Ergebnis ist deshalb sichergestellt, weil alle Vergleichswerte 0 oder 1 sind. Werden jedoch auch andere Vergleichswerte zugelassen, dann liefert die Formel = (A1:A6 &lt;&gt; B1:B6) die Werte {WAHR; WAHR; WAHR; WAHR; WAHR; WAHR}. Dieses Verhalten zeigt das folgende Beispiel.\n\n\n\nA\nB\n\n\n\n\n1\n0\n\n\n0\n2\n\n\n1\n2\n\n\n0\n1\n\n\n3\n2\n\n\n0\n0\n\n\n\nDamit das Richtige Ergebnis erzeugt wird, müssen die Werte in Wahrheitswerte konvertiert werden. Dazu muss die Formel durch Vergleiche ungleich 0 erweitert werden:\n= (A1:A6 &lt;&gt; 0) &lt;&gt; (B1:B6 &lt;&gt; 0)\nDiese Formel liefert die gewünschten Werte {WAHR; WAHR; FALSCH; WAHR; FALSCH; FALSCH}.\nDie folgende Tabelle zeigt logischen Operatoren und die zugehörigen Terme für die Boole’sche Arithmetik.\n\n\n\nOperator\n Boole’sche Operation\nVereinfachter Operator\n\n\n\n\n\\lnot\n1 - a\nNICHT(a)\n\n\n\\land\na * b\na * b\n\n\n\\lor\na + b - a * b\na + b\n\n\n\\oplus\na + b - 2 * a * b oder ( a - b ) ^ 2\n(a &lt;&gt; b)"
  },
  {
    "objectID": "kapitel/boolsche-operationen/kapitel.html#vergleiche",
    "href": "kapitel/boolsche-operationen/kapitel.html#vergleiche",
    "title": "9  Aussagenlogik",
    "section": "9.3 Vergleiche",
    "text": "9.3 Vergleiche\nEine besondere Art von logischen Ausdrücken sind Vergleiche. Ein Vergleich prüft das Verhältnis zweier Werte zueinander. Excel kennt die üblichen Vergleichsoperatoren, die jeweils einen Wahrheitswert zurückliefern.\nIn Excel werden die Vergleichsoperatoren wie folgt geschrieben:\n\n&gt; (grösser als)\n&lt; (kleiner als)\n&gt;= (grösser oder gleich)\n&lt;= (kleiner oder gleich)\n= (gleich)\n&lt;&gt; (ungleich)\n\nExcel’s Vergleichsoperatoren sind Datentypen sensitiv. Das bedeutet, dass die Operatoren Datentypen vor dem Vergleich nicht angleichen. Der Vergleich folgende Vergleich ergibt also immer FALSCH.\n= 3 = \"3\"\nWeil die Operationen *, + und - normalerweise vor den Vergleichsoperatoren ausgeführt werden, müssen alle Vergleiche eines logischen Ausdrucks für die Boole’sche Arithmetik in Klammern gesetzt werden.\n\n9.3.1 Der \\in-Operator mit XVERWEIS\nMithilfe der Funktion XVERGLEICH() kann der \\in-Operator aus der Mengenlehre in Excel für logische Ausdrücke bereitgestellt werden. Mit dieser Funktion XVERWEIS() können sowohl der \\in als auch der \\notin-Operator mit XVERWEIS() abgebildet werden.\nFür die folgenden Beispiele verwenden wir die Werte:\n\n\n\nA\nB\n\n\n\n\nSuchkriterium\nSuchbereich\n\n\n4\n1\n\n\n7\n3\n\n\n\n4\n\n\n\n8\n\n\n\n\n\\in-Operator: XVERWEIS(A2:A3; B2:B5; B2:B5 = B2:B5; FALSCH)\n\\notin-Operator: XVERWEIS(A2:A3; B2:B5; B2:B5 &lt;&gt; B2:B5; WAHR)\n\nDer Trick besteht darin, dass die Rückgabematrix durch einen Vergleich aus dem Suchbereich erzeugt wird. Dadurch wird die Rückgabematrix mit den gleichen Wahrheitswerten für alle Werte im Suchbereich gefüllt. Die erste Formel ergibt deshalb {WAHR; FALSCH} und die zweite Formel {FALSCH; WAHR}, weil der Wert 4 im Suchbereich vorkommt und der Wert 7 nicht. Diese Werte können direkt in logischen Ausdrücken verwendet werden.\n\n\n9.3.2 Zeichenketten vergleichen\nDie Vergleichsoperatoren zeigen die Unterschiede zweier Zeichenketten bezüglich der alphabetischen Sortierung an. Die “kleinste” Zeichenkette ist die leere Zeichenkette. Gross- und Kleinschreibung wird bei Zeichenkettenvergleichen nicht unterschieden.\nWeil Excel für Vergleiche die nicht-druckbaren Zeichen mit Ausnahme des Leerzeichens und des Tabulators ignoriert, gibt der Vergleichsoperator = WAHR auch für Zeichenketten zurück, die unterschiedliche nicht-druckbare Zeichen enthalten. Das gleiche Problem entsteht beim Vergleich von unterschiedlicher Gross- und Kleinschreibung. Um auch diese Unterschiede zu erkennen, müssen wir die Funktion IDENTISCH() verwenden. Diese Funktion vergleicht die Zeichenketten Zeichen für Zeichen und liefert nur dann WAHR zurück, wenn die Zeichenketten exakt gleich sind.\nBEISPIEL"
  },
  {
    "objectID": "kapitel/boolsche-operationen/kapitel.html#fälle-unterscheiden",
    "href": "kapitel/boolsche-operationen/kapitel.html#fälle-unterscheiden",
    "title": "9  Aussagenlogik",
    "section": "9.4 Fälle unterscheiden",
    "text": "9.4 Fälle unterscheiden\nLogische Ausdrücke eigenen sich besonders gut, um Fallunterscheidungen zu formulieren, weil ein logischer Ausdruck immer nur zwei Werte als Ergebnis haben kann. Es gibt also für jeden logischen Ausdruck immer nur zwei unterscheidbare Fälle.\nExcel hat zwei zentrale Funktionen für Fallunterscheidungen: WENN() und WENNS(). Die Funktion WENN() ist eine einfache Unterscheidung, die Funktion WENNS() unterstützt mehrfache Unterscheidungen. In anderen Programmiersprachen wird in diesem Zusammenhang auch von Verzweigungen gesprochen.\n\n9.4.1 WENN\nDie Funktion WENN() ist eine einfache Fallunterscheidung. Einfach bedeutet hier, dass die beiden Fälles eines logischen Ausdrucks unterschieden werden. Entsprechend hat die Funktion WENN() drei Parameter:\n\nDer auszuwertende logische Ausdruck.\nDas Ergebnis falls der logische Ausdruck WAHR ergibt.\nDas Ergebnis falls der logische Ausdruck FALSCH ergibt.\n\nDas Ergebnis für den Fall, dass der logische Ausdruck FALSCH ergibt, ist optional. Fehlt dieser Parameter, dann wird der Wert FALSCH zurückgegeben.\nDas Verhalten dieser Funktion lässt sich mit den Wahrheitswerten als logischer Ausdruck direkt überprüfen:\n= WENN(WAHR; \"Guten Tag\"; \"Auf Wiedersehen\")\nWeil der logische Ausdruck in diesem Fall WAHR ist, wird der zweite Parameter als Ergebnis zurückgegeben. Die Formel gibt also den Wert \"Guten Tag\" zurück.\nWird der logische Ausdruck auf FALSCH geändert, dann liefert die Formel den Wert \"Auf Wiedersehen\".\n= WENN(FALSCH; \"Guten Tag\"; \"Auf Wiedersehen\")\nLassen wir den dritten Parameter weg, dann wird der Wert FALSCH zurückgegeben.\n= WENN(FALSCH; \"Guten Tag\")\nAusser der Fallunterscheidung hat WENN() keine weiteren Eigenschaften. Deshalb wird diese Funktion in der Praxis oft mit anderen Funktionen kombiniert. Das kann mit der Funktion WENN() selbst geschehen. In diesem Fall wird von geschachtelten Fallunterscheidungen gesprochen.\nZur Veranschaulichung dient das folgende Beispiel:\n\n\n\n\nA\n\n\n\n\n1\n4\n\n\n2\n7\n\n\n\nEine Fallunterscheidung soll prüfen, ob die Werte in A1:A2 Werte gleich 1, 3, 4 oder 8 sind. Falls das der Fall ist, soll der zugehörige Zahlwert als Zeichenkette ausgegeben werden. Falls das nicht der Fall ist, soll der Wert Ungültig zurückgegeben werden. Als geschachtelte WENN()-Funktion lässt sich diese Fallunterscheidung wie folgt formulieren:\n= WENN(A1 = 1; \"Eins\"; \n       WENN(A1 = 3; \"Drei\"; \n            WENN(A1 = 4; \"Vier\"; \n                 WENN(A1 = 8; \"Acht\"; \n                      \"Ungültig\"))))\nEine solche geschachtelte Fallunterscheidung wird als Entscheidungsbaum bezeichnet.\n\n\n9.4.2 WENNS\nDie Funktion WENN() ist eine einfache Fallunterscheidung. In vielen Excel-Arbeitsmappen existieren geschachtelte Aufrufe von WENN()-Funktionen. Diese Aufrufe machen die Formeln nicht nur schwer lesbar, sondern auch fehleranfällig und ineffizient. Deshalb sollten geschachtelte Fallunterscheidungen unbedingt vermieden werden. Mit der Funktion WENNS() lassen sich geschachtelte Fallunterscheidungen vermeiden, indem alle Fallunterscheidungen in einem einzigen Funktionsaufruf zusammengefasst werden.\n\nMerke: geschachtelte Fallunterscheidungen mit WENN() unbedingt vermeiden!\n\nDie Funktion WENNS() erwartet Parameterpaare, bestehend aus einem logischen Ausdruck und dem Ergebnis, falls dieser logische Ausdruck WAHR ergibt. Die Funktion kann bis zu 127 Parameterpaare verarbeiten, so dass sich auch sehr komplexe Fallunterscheidungen mit dieser Funktion abbilden lassen.\n(Beispiel 1) Das folgende Beispiel zeigt die Verwendung der Funktion WENNS() für die geschachtelte Fallunterscheidung aus dem Abschnitt WENN.\n= WENNS(A2:A3 = 1; \"Eins\"; \n        A2:A3 = 3; \"Drei\"; \n        A2:A3 = 4; \"Vier\"; \n        A2:A3 = 8; \"Acht\")\nDas Beispiel bildet aber noch nicht die vollständige Fallunterscheidung ab. Es fehlt noch der Fall, dass keiner der logischen Ausdrücke WAHR ergibt. Leider kann WENNS() ausschliesslich logische Ausdrücke mit ihren Ergebnissen verbinden.\n\nMerke: WENNS() kann nur logische Ausdrücke mit ihren WAHR-Ergebnissen verbinden.\n\nAnders als bei WENN() gibt es keine direkte Möglichkeit, ein Ergebnis festzulegen, falls alle logische Ausdrücke FALSCH ergeben. Um ein solches Verhalten zu erzeugen, wird ausgenutzt, dass die Funktion WENNS() immer einen wahren logischen Ausdruck mit einem Ergebnis verknüpft. Weil die logischen Ausdrücke in der Reihenfolge ausgewertet werden, wie sie in der Funktion angegeben sind, muss der letzte logische Ausdruck alle Fälle abdecken, die von keinem anderen der vorangegangen logischen Ausdrücke akzeptiert wurden. Der einfachste logische Ausdruck, der immer wahr ist, ist der Wahrheitswert WAHR. Deshalb wird dieser Wert als letzter logischer Ausdruck für WENNS() verwendet.\nMit diesem Wissen lässt sich das erste Beispiel mit WENNS() vervollständigen:\n= WENNS(A2:A3 = 1; \"Eins\"; \n        A2:A3 = 3; \"Drei\"; \n        A2:A3 = 4; \"Vier\"; \n        A2:A3 = 8; \"Acht\"; \n        WAHR; \"Ungültig\")\nDiese Formel prüft die Werte in A2:A3 auf Gleichheit mit den Werten 1, 3, 4 und 8. Für diese Zahlen wird die zugehörige Zahlwert als Zeichenkette ausgegeben. Falls keiner dieser Werte gefunden wird, wird der Wert Ungültig zurückgegeben.\nDie Fallunterscheidung mit WENNS() endet beim ersten logischen Ausdruck, der WAHR ergibt. Die Funktion prüft der Reihe nach alle angegebenen logischen Ausdrücke. Sobald einer dieser Ausdrücke WAHR ist, wird der zugehörige Ergebniswert ausgegeben und die Funktion wird beendet. Diese Eigenschaft begründet, dass die logischen Ausdrück nur die Fälle prüfen müssen, die von den vorangegangenen logischen Ausdrücken nicht abgedeckt wurden.\n(*Beispiel 2) Das folgende komplexe Beispiel zeigt, wie die Fallunterscheidung mit WENNS() vereinfacht werden kann.\nWENN(J2&gt;=O2;\n    (WENN(J2&gt;L2;\n          0;\n          WENN(J2&lt;=L2;\n               WENN((J2&gt;N2)*(J2&gt;=O2);\n                    (K2+((M2-K2)/(N2-L2))*(J2-L2));\n                    WENN((J2&lt;=N2)*(J2&lt;O2);\n                         (M2+((O2-M2)/(O2-N2))*(J2-N2))\n                ))\n          )\n    ));\n    100)\nDiese Formel ist aus zwei Gründen übermässig komplex.\n\nDie Fallunterscheidung mit WENN() ist geschachtelt.\nEs existieren redundante Fallunterscheidungen.\n\nBevor die Fallunterscheidung mit WENNS() vereinfacht wird, werden die redundanten Fallunterscheidungen entfernt. Das betrifft die zweite (J2 &gt; L2) und die vierte Fallunterscheidung (J2 &gt; N2). Im jeweiligen FALSCH-Fall wird der gegenteilige logische Ausdruck geprüft. Das ist in diesem Fall unnötig, weil die äussere Fallunterscheidung diesen Fall bereits abdeckt. Werden die redundanten logischen Ausdrücke und unnötige Klammern entfernt, dann ergibt sich die folgende wesentlich einfachere Formel.\n= WENN(J2&gt;=O2;\n    WENN(J2&gt;L2;\n          0;\n          WENN((J2&gt;N2)*(J2&gt;=O2);\n              K2+(M2-K2)/(N2-L2)*(J2-L2);\n              M2+(O2-M2)/(O2-N2)*(J2-N2)\n          )\n    );\n    100)\nDie äusserste Fallunterscheidung hat für den Fall WAHR eine geschachtelte WENN()-Funktion und im Fall FALSCH ein einfaches Ergebnis. Das ist für WENNS() unhandlich, so dass die äusserste Fallunterscheidung durch Umkehrung des logischen Ausdrucks umgestellt wird.\n= WENN(J2&lt;O2;\n       100; \n       WENN(J2&gt;L2;\n            0;\n            WENN((J2&gt;N2)*(J2&gt;=O2);\n                 K2+(M2-K2)/(N2-L2)*(J2-L2);\n                 M2+(O2-M2)/(O2-N2)*(J2-N2)\n            )\n       )\n  )\nNun lassen sich die vier unterschiedlichen Fälle gut erkennen und mit WENNS() abbilden. Daraus ergibt sich die folgende Formel.\n= WENNS(J2&lt;O2; 100; \n        J2&gt;L2; 0; \n        (J2&gt;N2)*(J2&gt;=O2); K2+(M2-K2)/(N2-L2)*(J2-L2); \n        WAHR; M2+(O2-M2)/(O2-N2)*(J2-N2)\n  )\nDiese Formel ist wesentlich einfacher zu lesen und zu verstehen. Beim Durchgehen der Fälle fällt auf, dass ein Teilausdruck des dritten Falls das Gegenteil des ersten Falls ist. Diese Bedingung wurde bereits im ersten Fall geprüft und würde sie nicht gelten, dann wäre die Formel bereits beendet worden. Deshalb können bereits geprüfte Teilausdrücke in den nachfolgenden Ausdrücken weggefallen. Dadurch wird nicht nur die Verschachtelung, sondern auch die Komplexität der logischen Ausdrücke vereinfacht.\n= WENNS(J2&lt;O2; 100; \n        J2&gt;L2; 0; \n        J2&gt;N2; K2+(M2-K2)/(N2-L2)*(J2-L2); \n        WAHR;  M2+(O2-M2)/(O2-N2)*(J2-N2)\n  )\nDiese Formel hat jedoch den Makel, dass der letzte Fall WAHR keine Konstante abbildet. Besser wäre es, wenn der zweite und der letzte Fall vertauscht wären, so dass der Wert 0 der letzte Wert ist. Dazu müssen die logischen Ausdrücke umorganisiert werden. Bei der Umorganisation ist die Reihenfolge der logischen Ausdrücke zu beachten: Die letzten beiden Fälle sind nicht umabhängig vom logischen Ausdruck J2&gt;L2. Beim Umorganisieren darf diese Abhängigkeit nicht verloren gehen.\n= WENNS(J2&lt;O2; 100; \n        (J2&lt;=L2)*(J2&gt;N2); K2+(M2-K2)/(N2-L2)*(J2-L2); \n        J2&lt;=L2; M2+(O2-M2)/(O2-N2)*(J2-N2)\n        WAHR; 0\n  )\nDiese Formel ist deutlich einfacher und weniger Fehleranfällig als die ursprüngliche Formel mit geschachtelten WENN()-Funktionen. Es lassen sich auch weitere Fälle hinzufügen, ohne dass die Formel komplexer wird. Dabei ist zu beachten, dass diese Fälle vor dem Fall WAHR angegeben werden müssen.\n\n\n9.4.3 ERSTERWERT\nDie Funktion ERSTERWERT() bildet einen Spezialfall von WENNS() ab: Es wird bei allen logischen Ausdrücken ein Vergleich auf Gleichheit des Suchkriteriums mit verschiedenen Referenzwerten durchgeführt. In diesem Fall können die logischen Ausdrücke mit ERSTERWERT() stark vereinfacht werden. Das lässt sich am ersten Beispiel im Abschnitt WENNS veranschaulichen.\nWeil alle logischen Ausdrücke die Gleichheit über den gleichen Adressbereich prüfen, kann die Operation mit der Funktion ERSTERWERT() vereinfacht wie folgt werden.\n= ERSTERWERT(A2:A3; \n             1; \"Eins\"; \n             3; \"Drei\"; \n             4; \"Vier\"; \n             8; \"Acht\"; \n             \"Ungültig\")\n\n\n9.4.4 XVERWEIS zur Fallunterscheidung\nDie Funktion XVERWEIS() ist als Excels Version des \\in-Operators bereits bekannt. Die Funktion kann auch als Alternative zur Funktion ERSTERWERT() verwendet werden. In diesem Fall werden als Rückgabematrix keine Wahrheitswerte, sondern die Ergebnisse der Fallunterscheidung angegeben.\nDer Vorteil dieser Anwendung ist, dass die Fallunterscheidung nicht mehr auf die Anzahl der Parameterpaare beschränkt ist und die Parameterpaare zum Zeitpunkt der Formelerstellung auch nicht bekannt sein müssen.\nDas folgende Beispiel zeigt die Umsetzung des Beispiels aus dem Abschnitt ERSTERWERT mit XVERWEIS(). Dazu wird zuerst eine Tabelle mit den Vergleichswerten und den zugehörigen Ergebnissen erstellt.\n\n\n\nC\nD\n\n\n\n\n1\nEins\n\n\n3\nDrei\n\n\n4\nVier\n\n\n8\nAcht\n\n\n\nDiese Referenztabelle stell in Spalte C die sog. Suchmatrix und in Spalte D die sog. Rückgabematrix bereit. Mit diesen Werten lässt sich die Fallunterscheidung wie folgt abbilden.\n= XVERWEIS(A2:A3; C2:D5; D2:D5; \"Ungültig\")\nEin weiterer Vorteil von XVERGLEICH() gegenüber ERSTERWERT() sind Vergleiche mit den Operatoren =, &lt;= oder &gt;=. Diese Vergleiche lassen sich über den fünften Parameter von XVERWEIS() konfigurieren. Dabei steht der Wert 0 für die Gleichheit, der Wert -1 für kleiner oder gleich und der Wert 1 für grösser oder gleich. Die Vergleiche sind immer so organisiert, dass der linke Operand dem Suchkriterium entspricht und der rechte Operand dem Wert in der Suchmatrix. Bei einem Treffer wird der Wert aus der Rückgabematrix zurückgegeben. Gibt es keinen Treffer für den Vergleich wird der Wert aus dem vierten Parameter wenn_nicht_gefunden geliefert.\n\n\n9.4.5 Anwendungshilfe für Fallunterscheidungen\nDie Anwendung der verschiedenen Fallunterscheidungsfunktionen hängt von verschiedenen Kriterien ab. Diese sind hier zusammengefasst:\nDie Funktion WENN() wird immer dann eingesetzt, wenn ein logischer Ausdruck geprüft werden muss und nur die beiden Fälle dieses Ausdrucks unterschieden werden müssen.\nDie Funktion WENNS() wird immer dann eingesetzt werden, wenn mehrere logische Ausdrücke geprüft werden müssen. Die logischen Ausdrücke können dabei beliebig komplex sein und sich auf verschiedene Daten und Bereiche beziehen.\nDie Funktion ERSTERWERT() wird immer dann eingesetzt, wenn die Gleichheit des Suchkriteriums mit wenigen Referenzwerten überprüft werden soll. Die Suchkriterien sind für alle Vergleiche identisch.\nDie Funktion XVERWEIS() wird immer dann eingesetzt, wenn ein Vergleich auf Gleichheit, Kleiner-oder-Gleich oder Grösser-oder-Gleich durchgeführt werden muss. Die Suchkriterien und die Vergleichsoperatoren sind für alle Vergleiche identisch.\nDie Funktion XVERWEIS() muss anstatt von ERSTERWERT() verwendet werden, wenn die Referenzwerte des Vergleichs zum Zeitpunkt der Formelerstellung noch nicht bekannt sind oder leicht änderbar bleiben sollen."
  },
  {
    "objectID": "kapitel/boolsche-operationen/kapitel.html#rezepte",
    "href": "kapitel/boolsche-operationen/kapitel.html#rezepte",
    "title": "9  Aussagenlogik",
    "section": "9.5 Rezepte",
    "text": "9.5 Rezepte\n\n9.5.1 Fehlerwerte abfangen\nViele Excel-Funktionen geben einen Fehlerwert zurück, falls die Funktion kein gültiges Ergebnis ermitteln kann. Weil sich diese Fehlerwerte in Operationen fortpflanzen, müssen diese Werte durch einen geeigneten regulären Wert ersetzt werden. Das kann mit der folgenden Entscheidung erreicht werden.\n= WENN(ISTFEHLER(A1); 0; A1)\nDiese Operation ersetzt alle Fehlerwerte durch den Wert 0 und lässt alle anderen Werte unverändert.\nWeil diese Entscheidung sehr oft vorkommt, gibt es die Funktion WENNFEHLER(), mit der die gleiche Operation einfacher ausgedrückt werden kann.\n= WENNFEHLER(A1; 0)\n\n\n9.5.2 Eine Zahl für genau eine Bedingung zurückgeben\nEin häufiger Spezialfall für Unterscheidungen ist die Auswahl von Zahlen, die genau einen logischen Ausdrück erfüllen. Solche Unterscheidungen geben im FALSCH-Fall 0 und im anderen Fall die gesuchte Zahl zurück. In diesem Spezialfall kann der Zielwert ohne Umweg über die WENN()-Funktion mit dem logischen Ausdruck multipliziert werden. Der logische Ausdruck liefert 1 für WAHR und 0 für FALSCH. Die Multiplikation mit 0 liefert immer 0. Die Multiplikation mit 1 liefert den Zielwert.\nDas Beispiel gibt für die folgenden Werte alle Zahlen zurück, die grösser als 10 und kleiner als 20 sind.\n\n\n\nA\n\n\n\n\n13\n\n\n5\n\n\n17\n\n\n20\n\n\n12\n\n\n2\n\n\n29\n\n\n11\n\n\n7\n\n\n32\n\n\n\nNormalerweise würde diese Entscheidung durch die folgende Operation abgebildet:\n= WENN((A1:A10 &gt; 10) * (A1:A10 &lt; 20); A1:A10; 0)\n\n\n\n\n\n\nWarnung\n\n\n\nDiese spezielle Fallunterscheidung sollte auf Korrektheit überprüft werden, wenn im WAHR-Fall der Wert 0 erlaubt ist. In diesem Fall wird der Wert 0 nicht vom logischen Ausdruck unterschieden.\n\n\nWeil alle Werte Zahlen sind, handelt es sich um den Spezialfall, dass der WAHR-Wert eine Zahl und der FALSCH-Fall eine 0 ist. Für diesen Fall lässt sich die Formel vereinfachen, indem die gesuchten Werte mit dem logischen Ausdruck multipliziert werden:\n= A1:A10 * (A1:A10 &gt; 10) * (A1:A10 &lt; 20)\nDas Ergebnis beider Formeln sind die Werte {13;0;17;0;12;0;0;11;0;0}.\nDamit dieses Rezept funktioniert, müssen alle Teile des logischen Ausdrucks genau die Werte FALSCH oder WAHR bzw. 0 oder 1 zurückgeben. Das ist notwendig, weil nur das neutrale Element die Zielwerte unverändert lässt. Eine direkte Übergabe von Zahlen im logischen Ausdruck verfälscht das Ergebnis, weil nicht mit dem neutralen Element gerechnet wird.\nSoll für einen logischen Ausdruck nur der Wert 1 oder 0 zurückgegeben werden, dann kann der Rückgabebereich am Anfang der Formel weggelassen werden. Es wird dann nur der logische Ausdruck angegeben. Die Formel = (A1:A10 &gt; 10) * (A1:A10 &lt; 20) hat die Werte {1;0;1;0;1;0;0;1;0;0} als Ergebnis.\n\n\n9.5.3 Fehlerwerte vergleichen\nFehlerwerte können nicht direkt mit den Vergleichsoperatoren verglichen werden, weil Excel immer den ersten gefundenen Fehlerwert als Ergebnis einer Operation zurückgibt. Deshalb müssen Fehlerwerte zuerst in normale Werte konvertiert werden. Damit verschiedene Fehlerwerte miteinander verglichen werden können, müssen die verschiedenen Fehlerwerte zuerst in eindeutige Zahlen umgewandelt werden. Das übernimmt die Funktion FEHLER.TYP(). Diese Zahlen können anschliessend wie gewohnt weiter verarbeitet werden.\nDas folgende Beispiel weist den gegebenen Fehlerwerten eine Fehlermeldung zu:\n\n\n\nA\n\n\n\n\n#NV\n\n\n#WERT!\n\n\n3\n\n\n\nDie folgende Formel liefert die Werte {\"Fehler: #NV\"; \"Fehlerhafter Wert\", \"Kein Fehler\"}.\n= WENNS(FEHLER.TYP(A1:A2) = 7; \"Fehler: #NV\"; \n        FEHLER.TYP(A1:A2) = 3; \"Fehlerhafter Wert\"; \n        WAHR; \"Kein Fehler\")\nWeil alle Vergleiche die Gleichheit überprüfen, kann die Formel mit der Funktion ERSTERWERT() vereinfacht werden. Die Formel lautet dann:\n= ERSTERWERT( WENNFEHLER(FEHLER.TYP(A1:A3); 0);\n              3; \"Fehlerhafter Wert\";\n              7; \"Fehler: #NV\";\n              \"Kein Fehler\")\nFür diesen Schritt muss die Operation mit der Funktion WENNFEHLER() erweitert werden, weil die Funktion FEHLER.TYP() einen Fehler ausgibt, wenn der übergebene Wert kein Fehlerwert ist. Weil die Fehlertypen mit Werten grösser 0 durchnummeriert sind, bietet sich für reguläre Werte der Wert 0 an.\n\nDie Basisfunktionen für das Sortieren sind die Funktionen sort() (R) und SORTIEREN() (Excel). Diese Funktionen bringen einen Vektor in die gewünschte Reihenfolge. Beide Funktionen können nur nach einem Vektor sortieren. Deshalb eignen sie sich nur für einfache Sortierungen.\n\n\n\n\n\n\nHinweis\n\n\n\nExcels SORTIEREN()-Funktion kann einen Bereich zeilen- oder spaltenweise sortieren. Diese Funktion hat vier Parameter:\n\nMatrix - der zu sortierende Bereich, der keine Matrix sein muss.\nSortierindex - die Spalten- oder Zeilennummer, nach der sortiert werden soll. Standardmässig wird die erste Spalte bzw. die erste Zeile angenommen.\nSortierreihenfolge - legt die Sortierreihenfolge fest. 1, um aufsteigend und -1, um absteigend zu sortieren.\nnach_Spalte - Ein Wahrheitswert, ob die Spalten oder die Zeilen sortiert werden sollen. WAHR bedeutet, dass die Spalten (horizontal) sortiert werden sollen. FALSCH bedeutet, dass die Zeilen (vertikal) sortiert werden sollen. Standardmässig wird zeilenweise sortiert.\n\n\n\n\n9.5.3.1 Die Funktionen arrange() und SORTIERENNACH()\nFür allgemeine Sortierungen nach mehreren Vektoren stellen Excel und R eigene Funktionen bereit. Zwei dieser Funktionen heben sich wegen ihrer Flexibilität besonders ab. Ihnen liegt der gleiche Denkprozess zu Grunde. Diese beiden Funktionen sind:\n\nDie R-Funktion arrange() und\ndie Excel-Funktion SORTIERENNACH().\n\nBeide Funktionen ermöglichen uns, mehrere Vektoren auf einmal nach mehreren gemeinsamen Kriterien zu sortieren. Dazu müssen wir zuerst die Sortierkriterien identifizieren.\n\n\n9.5.3.2 Schritt 1: Sortierkriterien festlegen.\nDie Sortierkriterien sind durch die Werte in Vektoren festgelegt, nach denen sortiert werden soll. Wir können dazu mehrere Vektoren festlegen, deren Werte nacheinander zum Sortieren unserer Daten verwendet werden. In R legen wir die Suchkriterien über die entsprechenden Vektornamen und in Excel über entsprechende Vektoren oder Bereiche fest.\n\nIn R müssen die Vektoren mit den Suchkriterien im Stichprobenobjekt vorhanden sein.\n\nIn Excel können die Vektoren mit den Suchkriterien an einer beliebigen Position in einer Arbeitsmappe liegen. Dabei müssen zwei Bedingungen erfüllt sein:\n\nDie Vektoren müssen die gleiche Länge haben.\nDie Vektoren müssen die gleiche Orientierung haben.\n\n\n\n\n9.5.3.3 Schritt 2:\nIm zweiten Schritt werden die zu sortierenden Vektoren ausgewählt.\nIn R wird dieser zweite Schritt automatisch auf die vorgegebene Stichprobe angewandt. In Excel können wir zusammenhängende Vektoren als “Matrix” an die SORTIERENNACH()-Funktion übergeben. Hängen die Vektoren nicht direkt zusammen, dann müssen mehrere Sortieroperationen mit den gleichen Referenzen auf die Sortierreferenzen durchgeführt werden.\n\n\n\n9.5.4 Sortierreihenfolge\nIn Excel wird die Sortierrichtung als Sortierreihenfolge bezeichnet und als separater Parameter für das jeweilige Sortierkriterium angegeben. Dabei steht 1 für die aufsteigende Sortierung und -1 für die absteigende Sortierung.\nIn R wird grundsätzlich von einer aufsteigenden Sortierung ausgegangen. Um eine absteigende Sortierung zu erreichen, verwenden wir die Hilfsfunktion desc() (für engl. descending ~ absteigend).\nDas folgende R-Beispiel zeigt, wie die Daten im Stichprobenobjekt, zu erst absteigend nach dem natel-Vektor und anschliessend nach dem geschlecht-Vektor sortiert werden.\ndaten %&gt;% \n    arrange(\n         desc(natel), # Sortierkriterium absteigend sortiert\n         geschlecht   # Sortierkriterium aufsteigend sortiert\n    )\n\n\n9.5.5 Einfache Verzweigungen\nExcels Entscheidungsfunktion ist die WENN()-Funktion. Diese Funktion hat drei Parameter:\n\nEinen logischen Ausdruck - dieser Parameter wird als Wahrheitswert interpretiert.\nWAHR-Ergebnis - dieser Parameter wird als Ergebnis zurückgegeben, wenn der erste Parameter WAHR ist.\nFALSCH-Ergebnis - dieser Parameter wird als Ergebnis zurückgegeben, wenn der erste Parameter FALSCH ist.\n\nDiese Funktion entscheidet mit Hilfe des logischen Ausdrucks, welcher der beiden anderen Parameter zurückgegeben werden muss.\nIn R heisst diese Funktion ifelse() und hat genau die gleichen Parameter.\nHäufig finden wir Formeln, in denen einfach ein Wert als erster Parameter an die WENN()-Funktion übergeben wird. Dieser Wert wird als logischer Ausdruck interpretiert. Dabei wird der Wert 0 mit dem Wahrheitswert FALSCH gleichgesetzt und Werte ungleich 0 werden als WAHR interpretiert.\n\n\n9.5.6 Abbruchbedingungen\n\nDefinition 9.1 Eine Abbruchbedingung ist eine spezielle Entscheidung, die einen Algorithmus beendet. Dabei wird zwischen einem konstanten Wert und einem dynamischen Wert entschieden.\n\nMit Hilfe von Abbruchbedingungen “schützen” wir unsere Programmlogik vor unerwünschten oder fehlerhaften Werten.\n\n\n\n\n\n\nHinweis\n\n\n\nGenau genommen bricht dieses Konzept nicht ab, sondern verwendet die dynamischen Werte des Vektors nicht mehr. Stattdessen werden konstante Werte zurückgegeben. Für diese Werte müssen wir einen Wert wählen, der den logischen Ausdruck der Abbruchbedingung weiterhin so erfüllt, dass der Algorithmus diese Werte ignoriert.\n\n\n\n\n9.5.7 Komplexe Entscheidungen\nKomplexe Entscheidungen können wir uns als eine Folge einfacher Entscheidungen vorstellen. Weil solche Entscheidungen sehr unübersichtlich sein können, bieten Excel und R Kurzformen an, mit denen wir solche Folgen einfacher schreiben können.\n\n\n9.5.8 Excels WENNS\nDie WENNS()-Funktion erlaubt es uns, verschiedene Entscheidungen zusammenzufassen. Dabei gibt es immer Paare von logischen Ausdrücken und Ergebniswerten. Die WENNS()-Funktion prüft nacheinander die logischen Ausdrücke und liefert als Ergebnis den Wert, der zum ersten logischen Ausdruck gehört, der WAHR ergibt.\n\nBeispiel 9.1 (Linearer Entscheidungsbaum**)  \n=WENNS( A1 &gt; 5; \"Sehr gut\"; A1 &gt; 4; \"Gut\"; A1 &gt; 3; \"Genügend\"; A1 &lt;= 3; \"Ungenügend\")\n\nBeachten Sie, dass im Beispiel 9.2 der zweite logische Ausdruck auch für die Werte des ersten logischen Ausdrucks WAHR ergeben würde. Weil aber diese Fälle bereits durch den ersten logischen Ausdruck abgefangen werden, kommen diese gar nicht mehr zum zweiten logischen Ausdruck. Entsprechend müssen Sie aufpassen, dass die logischen Ausdrücke sich nicht überschneiden.\n\nBeispiel 9.2 (Nicht erreichbare Entscheidungen**)  \n=WENNS( A1 &gt; 5; \"Sehr gut\"; A1 &gt; 3; \"Genügend\"; A1 &gt; 4; \"Gut\"; A1 &lt;= 3; \"Ungenügend\")\n\nIn Beispiel 9.2 kann nie das Ergebnis “Gut” angezeigt werden, weil der zweite logische Ausdruck (A1 &gt; 3) alle Werte “maskiert”, die durch den dritten logischen Ausdruck (A1 &gt; 4) als “Gut” markiert werden müssten. “Ungenügend” würde trotzdem angezeigt werden, wenn der Wert in A1 entweder 1, 2 oder 3 ist.\nIn diesem Beispiel kann die Entscheidung A1 &gt; 4 nicht erreicht werden, weil das vorherige und allgemeinere Kriterium A1 &gt; 3 für die gleichen Werte zutrifft.\n\n\n\n\n\n\nMerke\n\n\n\nEs müssen immer die spezielleren Kriterien vor den allgemeineren Kriterien geprüft werden.\n\n\nEs ist guter Stil, das letzte Parameterpaar immer für den gültigen logischen Ausdruck WAHR zu reservieren. Damit stellen Sie sicher, dass für jeden möglichen Eingabewert ein gültiges Ergebnis zurückgegeben wird. Dieser Schritt ist notwendig, weil WENNS() keine Alternativausgabe hat.\n\nBeispiel 9.3 (Abschliessender Standardwert mit WAHR**)  \n=WENNS( A1 &gt; 5; \"Sehr gut\"; A1 &gt; 4; \"Gut\"; A1 &gt; 3; \"Genügend\"; UND(A1 &lt;= 3; A1 &gt; 0); \"Ungenügend\"; WAHR; \"Nicht angetreten\")\n\n\n\n9.5.9 Sonstige Entscheidungen in Excel\nIn Excel gibt es zusätzlich die beiden Funktionen WENNFEHLER() und deren spezialisierte Form WENNNV(). Diese Funktionen erlauben eine kompaktere Schreibweise der typischen Fehlerbehandlung: Wenn kein Fehler erzeugt wird, dann wird das Ergebnis der Formel des ersten Parameters als Ergebnis geliefert. Wird ein Fehler erzeugt, dann wird der 2. Parameter als Rückfallwert zurückgegeben.\nWir sparen uns mit diesen beiden Funktionen die Schreibweise:\n=WENN(ISTFEHLER(A1); \"Rückfallwert\", A1)\nStattdessen schreiben wir:\n=WENNFEHLER(A1, \"Rückfallwert\")\nDas ist leichter verständlich, als die ausführliche Variante mit WENN()."
  },
  {
    "objectID": "kapitel/vektor-operationen/kapitel.html",
    "href": "kapitel/vektor-operationen/kapitel.html",
    "title": "10  Vektor-Operationen",
    "section": "",
    "text": "Work in Progress"
  },
  {
    "objectID": "kapitel/matrix-operationen/kapitel.html",
    "href": "kapitel/matrix-operationen/kapitel.html",
    "title": "11  Matrix-Operationen",
    "section": "",
    "text": "Work in Progress"
  },
  {
    "objectID": "kapitel/kodieren-gruppieren/kapitel.html",
    "href": "kapitel/kodieren-gruppieren/kapitel.html",
    "title": "12  Kodieren und Gruppieren",
    "section": "",
    "text": "Work in Progress"
  },
  {
    "objectID": "kapitel/daten-formen/kapitel.html",
    "href": "kapitel/daten-formen/kapitel.html",
    "title": "13  Daten formen",
    "section": "",
    "text": "Work in Progress"
  },
  {
    "objectID": "kapitel/daten-beschreiben/kapitel.html",
    "href": "kapitel/daten-beschreiben/kapitel.html",
    "title": "14  Daten beschreiben",
    "section": "",
    "text": "Work in Progress"
  },
  {
    "objectID": "kapitel/daten-visualisieren/kapitel.html",
    "href": "kapitel/daten-visualisieren/kapitel.html",
    "title": "15  Daten visualisieren",
    "section": "",
    "text": "Work in Progress"
  },
  {
    "objectID": "kapitel/daten-visualisieren/pivot-tabellen.html",
    "href": "kapitel/daten-visualisieren/pivot-tabellen.html",
    "title": "16  Pivot-Tabellen",
    "section": "",
    "text": "Work in Progress\n\n\n\n\n\n\nPivot-Tabellen sind eine spezielle Form von Tabellen, die zur Datenanalyse verwendet werden. Pivot-Tabellen sind eine tabellarische Darstellung der Daten. Weil die Daten für Folgeberechnungen nicht zuverlässig zugegriffen werden können, sollten Pivot-Tabellen als Darstellungsform und nicht als Datenstruktur behandelt werden.\nAnders als Wertetabellen (s. Definition 5.2) sind Pivot-Tabellen keine benannte Struktur und die dargestellten Werte können nicht über die Tabellenadressierung abgefragt werden. Es gibt zwar eine Reihe von Funktionen, die auf Pivot-Tabellen angewendet werden können, aber diese Funktionen lassen sich nicht konsistent mit anderen Funktionen der Datenanalyse verkettet werden."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "Referenzen",
    "section": "",
    "text": "Fisher, N. I., & Kordupleski, R. E. (2019). Good and bad market\nresearch: A critical review of net promoter score. Applied\nStochastic Models in Business and Industry, 35(1),\n138–151. https://doi.org/10.1002/asmb.2417\n\n\nGrisaffe, D. B. (2007). Questions about the ultimate question:\nConceptual considerations in evaluating reichheld’s net promoter score\n(NPS). 20.\n\n\nKeiningham, T. L., Cooil, B., Andreassen, T. W., & Aksoy, L. (2007).\nA longitudinal examination of net promoter and firm revenue growth.\nJournal of Marketing, 71(3), 39–51. https://doi.org/10.1509/jmkg.71.3.039\n\n\nMicrosoft Support. (2023a). Excel specifications and limits. https://support.microsoft.com/en-gb/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\n\n\nMicrosoft Support. (2023b). Using structured references with excel\ntables. https://support.microsoft.com/en-gb/office/using-structured-references-with-excel-tables-f5ed2452-2337-4f71-bed3-c8ae6d2b276e\n\n\nReichheld, F. F. (2003). The one number you need to grow. Harvard\nBusiness Review."
  }
]